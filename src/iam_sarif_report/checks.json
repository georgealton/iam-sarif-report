{
  "error_arn_account_not_allowed": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-arn-account-not-allowed",
    "name": "ArnAccountNotAllowed",
    "short_description": "Remove the account ID from the resource ARN. The resource ARNs for some AWS\nservices do not support specifying an account ID.",
    "description": "Remove the account ID from the resource ARN. The resource ARNs for some AWS\nservices do not support specifying an account ID.\n\nFor example, Amazon S3 does not support an account ID as a namespace in bucket\nARNs. An Amazon S3 bucket name is globally unique, and the namespace is shared\nby all AWS accounts. To view all of the resource types available in Amazon S3,\nsee [ Resource types defined by Amazon\nS3](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/list_amazons3.html#amazons3-resources-for-iam-\npolicies) in the _Service Authorization Reference_.\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Account Identifiers](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [AWS service resources with ARN formats](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_arn_region_not_allowed": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-arn-region-not-allowed",
    "name": "ArnRegionNotAllowed",
    "short_description": "Remove the Region from the resource ARN. The resource ARNs for some AWS\nservices do not support specifying a Region.",
    "description": "Remove the Region from the resource ARN. The resource ARNs for some AWS\nservices do not support specifying a Region.\n\nFor example, IAM is a global service. The Region portion of an IAM resource\nARN is always kept blank. IAM resources are global, like an AWS account is\ntoday. For example, after you sign in as an IAM user, you can access AWS\nservices in any geographic region.\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [AWS service resources with ARN formats](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_data_type_mismatch": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-data-type-mismatch",
    "name": "DataTypeMismatch",
    "short_description": "Update the text to use the supported data type.",
    "description": "Update the text to use the supported data type.\n\nFor example, the `Version` global condition key requires a `String` data type.\nIf you provide a date or an integer, the data type won't match.\n\n**Related terms**\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)"
  },
  "error_duplicate_keys_with_different_case": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-duplicate-keys-with-different-case",
    "name": "DuplicateKeysWithDifferentCase",
    "short_description": "Review the similar condition keys within the same condition block and use the\nsame capitalization for all instances.",
    "description": "Review the similar condition keys within the same condition block and use the\nsame capitalization for all instances.\n\nA _condition block_ is the text within the `Condition` element of a policy\nstatement. Condition key _names_ are not case-sensitive. The case-sensitivity\nof condition key _values_ depends on the condition operator that you use. For\nmore information about case-sensitivity in condition keys, see [IAM JSON\npolicy elements: Condition](./reference_policies_elements_condition.html).\n\n**Related terms**\n\n  * [Conditions](./reference_policies_elements_condition.html)\n\n  * [Condition block](./reference_policies_elements_condition.html#AccessPolicyLanguage_ConditionBlock)\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [AWS service condition keys](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-action",
    "name": "InvalidAction",
    "short_description": "The action that you specified is not valid. This can happen if you mis-type\nthe service prefix or the action name. For some common issues, the policy\ncheck returns a suggested action.",
    "description": "The action that you specified is not valid. This can happen if you mis-type\nthe service prefix or the action name. For some common issues, the policy\ncheck returns a suggested action.\n\n**Related terms**\n\n  * [Policy actions](./reference_policies_elements_action.html)\n\n  * [AWS service actions](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)\n\n### AWS managed policies with this error\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nThe following AWS managed policies include invalid actions in their policy\nstatements. Invalid actions do not affect the permissions granted by the\npolicy. When using an AWS managed policy as a reference to create your managed\npolicy, AWS recommends that you remove invalid actions from your policy.\n\n  * [AmazonEMRFullAccessPolicy_v2](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AmazonEMRFullAccessPolicy_v2)\n\n  * [CloudWatchSyntheticsFullAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/CloudWatchSyntheticsFullAccess)"
  },
  "error_invalid_arn_account": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-account",
    "name": "InvalidArnAccount",
    "short_description": "Update the account ID in the resource ARN. Account IDs are 12-digit integers.\nTo learn how to view your account ID, see [Finding your AWS account\nID](https://docs.aws.amazon.com/general/latest/gr/acct-\nidentifiers.html#FindingYourAccountIdentifiers).",
    "description": "Update the account ID in the resource ARN. Account IDs are 12-digit integers.\nTo learn how to view your account ID, see [Finding your AWS account\nID](https://docs.aws.amazon.com/general/latest/gr/acct-\nidentifiers.html#FindingYourAccountIdentifiers).\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Account Identifiers](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [AWS service resources with ARN formats](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_arn_prefix": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-prefix",
    "name": "InvalidArnPrefix",
    "short_description": "AWS resource ARNs must include the required `arn:` prefix.",
    "description": "AWS resource ARNs must include the required `arn:` prefix.\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [AWS service resources with ARN formats](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_arn_region": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-region",
    "name": "InvalidArnRegion",
    "short_description": "The resource type is not supported in the specified Region. For a table of AWS\nservices supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).",
    "description": "The resource type is not supported in the specified Region. For a table of AWS\nservices supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [Region names and codes](https://docs.aws.amazon.com/general/latest/gr/rande.html#region-names-codes)"
  },
  "error_invalid_arn_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-resource",
    "name": "InvalidArnResource",
    "short_description": "The resource ARN must match the specifications for known resource types. To\nview the expected ARN format for a service, see [Actions, resources, and\ncondition keys for AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view its resource types\nand ARN formats.",
    "description": "The resource ARN must match the specifications for known resource types. To\nview the expected ARN format for a service, see [Actions, resources, and\ncondition keys for AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view its resource types\nand ARN formats.\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [AWS service resources with ARN formats](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_arn_service_case": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-service-case",
    "name": "InvalidArnServiceCase",
    "short_description": "The service in the resource ARN must match the specifications (including\ncapitalization) for service prefixes. To view the prefix for a service, see\n[Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.",
    "description": "The service in the resource ARN must match the specifications (including\ncapitalization) for service prefixes. To view the prefix for a service, see\n[Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [AWS service resources with ARN formats](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_condition_data_type": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-condition-data-type",
    "name": "InvalidConditionDataType",
    "short_description": "The value in the condition key-value pair must match the data type of the\ncondition key and condition operator. To view the condition key data type for\na service, see [Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view the condition keys\nfor that service.",
    "description": "The value in the condition key-value pair must match the data type of the\ncondition key and condition operator. To view the condition key data type for\na service, see [Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view the condition keys\nfor that service.\n\nFor example, the [CurrentTime](./reference_policies_condition-\nkeys.html#condition-keys-currenttime) global condition key supports the `Date`\ncondition operator. If you provide a string or an integer for the value in the\ncondition block, the data type won't match.\n\n**Related terms**\n\n  * [Conditions](./reference_policies_elements_condition.html)\n\n  * [Condition block](./reference_policies_elements_condition.html#AccessPolicyLanguage_ConditionBlock)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [AWS service condition keys](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_condition_key_format": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-condition-key-format",
    "name": "InvalidConditionKeyFormat",
    "short_description": "The key in the condition key-value pair must match the specifications for the\nservice. To view the condition keys for a service, see [Actions, resources,\nand condition keys for AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view the condition keys\nfor that service.",
    "description": "The key in the condition key-value pair must match the specifications for the\nservice. To view the condition keys for a service, see [Actions, resources,\nand condition keys for AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view the condition keys\nfor that service.\n\n**Related terms**\n\n  * [Conditions](./reference_policies_elements_condition.html)\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [AWS service condition keys](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_condition_multiple_boolean": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-condition-multiple-boolean",
    "name": "InvalidConditionMultipleBoolean",
    "short_description": "The key in the condition key-value pair expects a single Boolean value. When\nyou provide multiple Boolean values, the condition match might not return the\nresults that you expect.",
    "description": "The key in the condition key-value pair expects a single Boolean value. When\nyou provide multiple Boolean values, the condition match might not return the\nresults that you expect.\n\nTo view the condition keys for a service, see [Actions, resources, and\ncondition keys for AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view the condition keys\nfor that service.\n\n  * [Conditions](./reference_policies_elements_condition.html)\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [AWS service condition keys](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_condition_operator": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-condition-operator",
    "name": "InvalidConditionOperator",
    "short_description": "Update the condition to use a supported condition operator.",
    "description": "Update the condition to use a supported condition operator.\n\n**Related terms**\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)\n\n  * [Condition element](./reference_policies_elements_condition.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "error_invalid_effect": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-effect",
    "name": "InvalidEffect",
    "short_description": "Update the `Effect` element to use a valid effect. Valid values for\u00c2 `Effect`\u00c2\nare\u00c2 `Allow`\u00c2 and\u00c2 `Deny`.",
    "description": "Update the `Effect` element to use a valid effect. Valid values for\u00c2 `Effect`\u00c2\nare\u00c2 `Allow`\u00c2 and\u00c2 `Deny`.\n\n**Related terms**\n\n  * [Effect element](./reference_policies_elements_effect.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "error_invalid_global_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-global-condition-key",
    "name": "InvalidGlobalConditionKey",
    "short_description": "Update the condition key in the condition key-value pair to use a supported\nglobal condition key.",
    "description": "Update the condition key in the condition key-value pair to use a supported\nglobal condition key.\n\nGlobal condition keys are condition keys with an\u00c2 `aws:`\u00c2 prefix. AWS services\ncan support global condition keys or provide service-specific keys that\ninclude their service prefix. For example, IAM condition keys include the\u00c2\n`iam:`\u00c2 prefix. For more information, see\u00c2 [Actions, Resources, and Condition\nKeys for AWS Services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html)\u00c2 and choose the service whose keys you want to view.\n\n**Related terms**\n\n  * [Global condition keys](./reference_policies_condition-keys.html)"
  },
  "error_invalid_partition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-partition",
    "name": "InvalidPartition",
    "short_description": "Update the resource ARN to include a supported partition. If you included a\nsupported partition, then the service or resource might not support the\npartition that you included.",
    "description": "Update the resource ARN to include a supported partition. If you included a\nsupported partition, then the service or resource might not support the\npartition that you included.\n\nA _partition_ is a group of AWS Regions. Each AWS account is scoped to one\npartition. In Classic Regions, use the `aws` partition. In China Regions, use\n`aws-cn`.\n\n**Related terms**\n\n  * [Amazon Resource Names (ARNs) - Partitions](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)"
  },
  "error_invalid_policy_element": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-policy-element",
    "name": "InvalidPolicyElement",
    "short_description": "Update the policy to include only supported JSON policy elements.",
    "description": "Update the policy to include only supported JSON policy elements.\n\n**Related terms**\n\n  * [JSON policy elements](./reference_policies_elements.html)"
  },
  "error_invalid_principal_format": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-principal-format",
    "name": "InvalidPrincipalFormat",
    "short_description": "Update the principal to use a supported key-value pair format.",
    "description": "Update the principal to use a supported key-value pair format.\n\nYou can specify a principal in a resource-based policy, but not an identity-\nbased policy.\n\nFor example, to define access for everyone in an AWS account, use the\nfollowing principal in your policy:\n\n    \n    \n    \"Principal\": { \"AWS\": \"123456789012\" }\n\n**Related terms**\n\n  * [JSON policy elements: Principal](./reference_policies_elements_principal.html)\n\n  * [Identity-based policies and resource-based policies](./access_policies_identity-vs-resource.html)"
  },
  "error_invalid_principal_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-principal-key",
    "name": "InvalidPrincipalKey",
    "short_description": "Update the key in the principal key-value pair to use a supported principal\nkey. The following are supported principal keys:",
    "description": "Update the key in the principal key-value pair to use a supported principal\nkey. The following are supported principal keys:\n\n  * AWS\n\n  * CanonicalUser\n\n  * Federated\n\n  * Service\n\n**Related terms**\n\n  * [Principal element](./reference_policies_elements_principal.html)"
  },
  "error_invalid_region": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-region",
    "name": "InvalidRegion",
    "short_description": "Update the value of the condition key-value pair to include a supported\nRegion. For a table of AWS services supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).",
    "description": "Update the value of the condition key-value pair to include a supported\nRegion. For a table of AWS services supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [Region names and codes](https://docs.aws.amazon.com/general/latest/gr/rande.html#region-names-codes)"
  },
  "error_invalid_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-service",
    "name": "InvalidService",
    "short_description": "The service prefix in the action or condition key must match the\nspecifications (including capitalization) for service prefixes. To view the\nprefix for a service, see [ Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.",
    "description": "The service prefix in the action or condition key must match the\nspecifications (including capitalization) for service prefixes. To view the\nprefix for a service, see [ Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.\n\n**Related terms**\n\n  * [ Known services and their actions, resources, and condition keys](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_service_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-service-condition-key",
    "name": "InvalidServiceConditionKey",
    "short_description": "Update the key in the condition key-value pair to use a known condition key\nfor the service. Global condition key names begin with the `aws` prefix. AWS\nservices can provide service-specific keys that include their service prefix.\nTo view the prefix for a service, see [ Actions, resources, and condition keys\nfor AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html).",
    "description": "Update the key in the condition key-value pair to use a known condition key\nfor the service. Global condition key names begin with the `aws` prefix. AWS\nservices can provide service-specific keys that include their service prefix.\nTo view the prefix for a service, see [ Actions, resources, and condition keys\nfor AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html).\n\n**Related terms**\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [ Known services and their actions, resources, and condition keys](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_service_in_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-service-in-action",
    "name": "InvalidServiceInAction",
    "short_description": "The service prefix in the action must match the specifications (including\ncapitalization) for service prefixes. To view the prefix for a service, see [\nActions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.",
    "description": "The service prefix in the action must match the specifications (including\ncapitalization) for service prefixes. To view the prefix for a service, see [\nActions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.\n\n**Related terms**\n\n  * [Action element](./reference_policies_elements_action.html)\n\n  * [ Known services and their actions](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_variable_for_operator": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-variable-for-operator",
    "name": "InvalidVariableForOperator",
    "short_description": "You can use policy variables in the\u00c2 `Resource`\u00c2 element and in string\ncomparisons in the\u00c2 `Condition`\u00c2 element. Conditions support variables when\nyou use string operators or ARN operators. String operators include\n`StringEquals`,\u00c2 `StringLike`, and\u00c2 `StringNotLike`. ARN operators include\u00c2\n`ArnEquals`\u00c2 and\u00c2 `ArnLike`. You can't use a policy variable with other\noperators, such as\u00c2 Numeric,\u00c2 Date,\u00c2 Boolean,\u00c2 Binary,\u00c2 IP Address, or\u00c2 Null\u00c2\noperators.",
    "description": "You can use policy variables in the\u00c2 `Resource`\u00c2 element and in string\ncomparisons in the\u00c2 `Condition`\u00c2 element. Conditions support variables when\nyou use string operators or ARN operators. String operators include\n`StringEquals`,\u00c2 `StringLike`, and\u00c2 `StringNotLike`. ARN operators include\u00c2\n`ArnEquals`\u00c2 and\u00c2 `ArnLike`. You can't use a policy variable with other\noperators, such as\u00c2 Numeric,\u00c2 Date,\u00c2 Boolean,\u00c2 Binary,\u00c2 IP Address, or\u00c2 Null\u00c2\noperators.\n\n**Related terms**\n\n  * [Using policy variables in the Condition element](./reference_policies_variables.html#policy-vars-conditionelement)\n\n  * [Condition element](./reference_policies_elements_condition.html)"
  },
  "error_invalid_version": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-version",
    "name": "InvalidVersion",
    "short_description": "The\u00c2 `Version`\u00c2 policy element specifies the language syntax rules that AWS\nuses to process a policy. To use all of the available policy features, include\nthe latest\u00c2 `Version`\u00c2 element before the\u00c2 `Statement`\u00c2 element in all of your\npolicies.",
    "description": "The\u00c2 `Version`\u00c2 policy element specifies the language syntax rules that AWS\nuses to process a policy. To use all of the available policy features, include\nthe latest\u00c2 `Version`\u00c2 element before the\u00c2 `Statement`\u00c2 element in all of your\npolicies.\n\n    \n    \n    \"Version\": \"2012-10-17\"\n\n**Related terms**\n\n  * [Version element](./reference_policies_elements_version.html)"
  },
  "error_json_syntax_error": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-json-syntax-error",
    "name": "JsonSyntaxError",
    "short_description": "Your policy includes a syntax error. Check your JSON syntax.",
    "description": "Your policy includes a syntax error. Check your JSON syntax.\n\n**Related terms**\n\n  * [JSON validator](https://json-validate.com/)\n\n  * [IAM JSON policy elements reference](./reference_policies_elements.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "error_missing_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-action",
    "name": "MissingAction",
    "short_description": "AWS JSON policies must include an `Action` or `NotAction` element.",
    "description": "AWS JSON policies must include an `Action` or `NotAction` element.\n\n**Related terms**\n\n  * [Action element](./reference_policies_elements_action.html)\n\n  * [NotAction element](./reference_policies_elements_notaction.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "error_missing_arn_field": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-arn-field",
    "name": "MissingArnField",
    "short_description": "All of the fields in the resource ARN must match the specifications for a\nknown resource type. To view the expected ARN format for a service, see\n[Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view its resource types\nand ARN formats.",
    "description": "All of the fields in the resource ARN must match the specifications for a\nknown resource type. To view the expected ARN format for a service, see\n[Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view its resource types\nand ARN formats.\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [AWS service resources with ARN formats](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_missing_arn_region": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-arn-region",
    "name": "MissingArnRegion",
    "short_description": "The resource ARNs for most AWS services require that you specify a Region. For\na table of AWS services supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).",
    "description": "The resource ARNs for most AWS services require that you specify a Region. For\na table of AWS services supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [Region names and codes](https://docs.aws.amazon.com/general/latest/gr/rande.html#region-names-codes)"
  },
  "error_missing_effect": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-effect",
    "name": "MissingEffect",
    "short_description": "AWS JSON policies must include an `Effect` element with a value of\u00c2 `Allow`\u00c2\nand\u00c2 `Deny`.",
    "description": "AWS JSON policies must include an `Effect` element with a value of\u00c2 `Allow`\u00c2\nand\u00c2 `Deny`.\n\n**Related terms**\n\n  * [Effect element](./reference_policies_elements_effect.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "error_missing_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-principal",
    "name": "MissingPrincipal",
    "short_description": "Resource-based policies must include a `Principal` element.",
    "description": "Resource-based policies must include a `Principal` element.\n\nFor example, to define access for everyone in an AWS account, use the\nfollowing principal in your policy:\n\n    \n    \n    \"Principal\": { \"AWS\": \"123456789012\" }\n\n**Related terms**\n\n  * [Principal element](./reference_policies_elements_principal.html)\n\n  * [Identity-based policies and resource-based policies](./access_policies_identity-vs-resource.html)"
  },
  "error_missing_qualifier": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-qualifier",
    "name": "MissingQualifier",
    "short_description": "In the\u00c2 `Condition`\u00c2 element, you build expressions in which you use\u00c2\ncondition operators like equal or less than to compare a condition in the\npolicy against keys and values in the request context. For requests that\ninclude multiple values for a single condition key, you must enclose the\nconditions within brackets like an array (\"Key2\":[\"Value2A\", \"Value2B\"]). You\nmust also use the\u00c2 `ForAllValues`\u00c2 or\u00c2 `ForAnyValue`\u00c2 set operators with the\u00c2\n`StringLike`\u00c2 condition operator. These qualifiers add set-operation\nfunctionality to the condition operator so that you can test multiple request\nvalues against multiple condition values.",
    "description": "In the\u00c2 `Condition`\u00c2 element, you build expressions in which you use\u00c2\ncondition operators like equal or less than to compare a condition in the\npolicy against keys and values in the request context. For requests that\ninclude multiple values for a single condition key, you must enclose the\nconditions within brackets like an array (\"Key2\":[\"Value2A\", \"Value2B\"]). You\nmust also use the\u00c2 `ForAllValues`\u00c2 or\u00c2 `ForAnyValue`\u00c2 set operators with the\u00c2\n`StringLike`\u00c2 condition operator. These qualifiers add set-operation\nfunctionality to the condition operator so that you can test multiple request\nvalues against multiple condition values.\n\n**Related terms**\n\n  * [Multivalued context keys](./reference_policies_condition-single-vs-multi-valued-context-keys.html#reference_policies_condition-multi-valued-context-keys)\n\n  * [Condition element](./reference_policies_elements_condition.html)\n\n### AWS managed policies with this error\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nThe following AWS managed policies include a missing qualifier for condition\nkeys in their policy statements. When using the AWS managed policy as a\nreference to create your customer managed policy, AWS recommends that you add\nthe `ForAllValues` or `ForAnyValue` condition key qualifiers to your\n`Condition` element.\n\n  * [AWSGlueConsoleSageMakerNotebookFullAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AWSGlueConsoleSageMakerNotebookFullAccess)"
  },
  "error_missing_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-resource",
    "name": "MissingResource",
    "short_description": "All policies except role trust policies must include a `Resource` or\n`NotResource` element.",
    "description": "All policies except role trust policies must include a `Resource` or\n`NotResource` element.\n\n**Related terms**\n\n  * [Resource element](./reference_policies_elements_resource.html)\n\n  * [NotResource element](./reference_policies_elements_notresource.html)\n\n  * [Identity-based policies and resource-based policies](./access_policies_identity-vs-resource.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "error_missing_statement": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-statement",
    "name": "MissingStatement",
    "short_description": "A JSON policy must include a statement.",
    "description": "A JSON policy must include a statement.\n\n**Related terms**\n\n  * [JSON policy elements](./reference_policies_elements.html)"
  },
  "error_null_with_if_exists": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-null-with-if-exists",
    "name": "NullWithIfExists",
    "short_description": "You can add\u00c2 `IfExists`\u00c2 to the end of any condition operator name except the\u00c2\n`Null`\u00c2 condition operator. Use a\u00c2 `Null`\u00c2 condition operator to check if a\ncondition key is present at the time of authorization. Use `...ifExists` to\nsay \"If the policy key is present in the context of the request, process the\nkey as specified in the policy. If the key is not present, evaluate the\ncondition element as true.\"",
    "description": "You can add\u00c2 `IfExists`\u00c2 to the end of any condition operator name except the\u00c2\n`Null`\u00c2 condition operator. Use a\u00c2 `Null`\u00c2 condition operator to check if a\ncondition key is present at the time of authorization. Use `...ifExists` to\nsay \"If the policy key is present in the context of the request, process the\nkey as specified in the policy. If the key is not present, evaluate the\ncondition element as true.\"\n\n**Related terms**\n\n  * [...IfExists condition operators](./reference_policies_elements_condition_operators.html#Conditions_IfExists)\n\n  * [Null condition operator](./reference_policies_elements_condition_operators.html#Conditions_Null)\n\n  * [Condition element](./reference_policies_elements_condition.html)"
  },
  "error_scp_syntax_error_action_wildcard": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-action-wildcard",
    "name": "ActionWildcard",
    "short_description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Action` or `NotAction` elements. However, these values can include\nwildcards (*) only at the end of the string. This means that you can specify\n`iam:Get*` but not `iam:*role`.",
    "description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Action` or `NotAction` elements. However, these values can include\nwildcards (*) only at the end of the string. This means that you can specify\n`iam:Get*` but not `iam:*role`.\n\nTo specify multiple actions, AWS recommends that you list them individually.\n\n**Related terms**\n\n  * [SCP Action and NotAction elements](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html#scp-syntax-action)\n\n  * [SCP evaluation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_evaluation.html)\n\n  * [AWS Organizations service control policies](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)"
  },
  "error_scp_syntax_error_allow_condition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-allow-condition",
    "name": "AllowCondition",
    "short_description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Condition` element only when you use `\"Effect\": \"Deny\"`.",
    "description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Condition` element only when you use `\"Effect\": \"Deny\"`.\n\nTo allow only a single action, you can deny access to everything except the\ncondition that you specify using the `...NotEquals` version of a condition\noperator. This negates the comparison made by the operator.\n\n**Related terms**\n\n  * [SCP Condition element](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html#scp-syntax-condition)\n\n  * [SCP evaluation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_evaluation.html)\n\n  * [AWS Organizations service control policies](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)\n\n  * [Example policy: Denies access to AWS based on the requested Region](./reference_policies_examples_aws_deny-requested-region.html)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "error_scp_syntax_error_allow_notaction": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-allow-notaction",
    "name": "AllowNotaction",
    "short_description": "AWS Organizations service control policies (SCPs) do not support using the\n`NotAction` element with `\"Effect\": \"Allow\"`.",
    "description": "AWS Organizations service control policies (SCPs) do not support using the\n`NotAction` element with `\"Effect\": \"Allow\"`.\n\nYou must rewrite the logic to allow a list of actions, or to deny every action\nthat is not listed.\n\n**Related terms**\n\n  * [SCP Action and NotAction elements](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html#scp-syntax-action)\n\n  * [SCP evaluation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_evaluation.html)\n\n  * [AWS Organizations service control policies](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)"
  },
  "error_scp_syntax_error_allow_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-allow-resource",
    "name": "AllowResource",
    "short_description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Resource` element only when you use `\"Effect\": \"Deny\"`.",
    "description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Resource` element only when you use `\"Effect\": \"Deny\"`.\n\nYou must rewrite the logic to allow all resources, or to deny every resource\nthat is listed.\n\n**Related terms**\n\n  * [SCP Resource element](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html#scp-syntax-resource)\n\n  * [SCP evaluation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_evaluation.html)\n\n  * [AWS Organizations service control policies](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "error_scp_syntax_error_notresource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-notresource",
    "name": "Notresource",
    "short_description": "AWS Organizations service control policies (SCPs) do not support the\n`NotResource` element.",
    "description": "AWS Organizations service control policies (SCPs) do not support the\n`NotResource` element.\n\nYou must rewrite the logic to allow all resources, or to deny every resource\nthat is listed.\n\n**Related terms**\n\n  * [SCP Resource element](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html#scp-syntax-resource)\n\n  * [SCP evaluation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_evaluation.html)\n\n  * [AWS Organizations service control policies](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "error_scp_syntax_error_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-principal",
    "name": "Principal",
    "short_description": "AWS Organizations service control policies (SCPs) do not support the\n`Principal` or `NotPrincipal` elements.",
    "description": "AWS Organizations service control policies (SCPs) do not support the\n`Principal` or `NotPrincipal` elements.\n\nYou can specify the Amazon Resource Name (ARN) using the `aws:PrincipalArn`\nglobal condition key in the `Condition` element.\n\n**Related terms**\n\n  * [SCP syntax](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html)\n\n  * [Global condition keys for principals](./reference_policies_condition-keys.html#condition-keys-principalarn)"
  },
  "error_unique_sids_required": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unique-sids-required",
    "name": "UniqueSidsRequired",
    "short_description": "For some policy types, statement IDs must be unique. The `Sid` (statement ID)\nelement allows you to enter an optional identifier that you provide for the\npolicy statement. You can assign a statement ID value to each statement in a\nstatement array using the `SID` element. In services that let you specify an\nID element, such as SQS and SNS, the `Sid` value is just a sub-ID of the\npolicy document's ID. For example, in IAM, the `Sid` value must be unique\nwithin a JSON policy.",
    "description": "For some policy types, statement IDs must be unique. The `Sid` (statement ID)\nelement allows you to enter an optional identifier that you provide for the\npolicy statement. You can assign a statement ID value to each statement in a\nstatement array using the `SID` element. In services that let you specify an\nID element, such as SQS and SNS, the `Sid` value is just a sub-ID of the\npolicy document's ID. For example, in IAM, the `Sid` value must be unique\nwithin a JSON policy.\n\n**Related terms**\n\n  * [IAM JSON policy elements: Sid](./reference_policies_elements_sid.html)"
  },
  "error_unsupported_action_in_policy": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-action-in-policy",
    "name": "UnsupportedActionInPolicy",
    "short_description": "Some actions aren't supported in the `Action` element in the resource-based\npolicy attached to a different resource type. For example, AWS Key Management\nService actions aren't supported in Amazon S3 bucket policies. Specify an\naction that is supported by resource type attached to your resource-based\npolicy.",
    "description": "Some actions aren't supported in the `Action` element in the resource-based\npolicy attached to a different resource type. For example, AWS Key Management\nService actions aren't supported in Amazon S3 bucket policies. Specify an\naction that is supported by resource type attached to your resource-based\npolicy.\n\n**Related terms**\n\n  * [JSON policy elements: Action](./reference_policies_elements_action.html)"
  },
  "error_unsupported_element_combination": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-element-combination",
    "name": "UnsupportedElementCombination",
    "short_description": "Some combinations of JSON policy elements can't be used together. For example,\nyou cannot use both `Action` and `NotAction` in the same policy statement.\nOther pairs that are mutually exclusive include `Principal/NotPrincipal` and\n`Resource/NotResource`.",
    "description": "Some combinations of JSON policy elements can't be used together. For example,\nyou cannot use both `Action` and `NotAction` in the same policy statement.\nOther pairs that are mutually exclusive include `Principal/NotPrincipal` and\n`Resource/NotResource`.\n\n**Related terms**\n\n  * [IAM JSON policy elements reference](./reference_policies_elements.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "error_unsupported_global_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-global-condition-key",
    "name": "UnsupportedGlobalConditionKey",
    "short_description": "AWS does not support using the specified global condition key. Depending on\nyour use case, you can use the `aws:PrincipalArn` or `aws:SourceArn` global\ncondition keys. For example, instead of `aws:ARN`, use the `aws:PrincipalArn`\nto compare the Amazon Resource Name (ARN) of the principal that made the\nrequest with the ARN that you specify in the policy. Alternatively, use the\n`aws:SourceArn` global condition key to compare the Amazon Resource Name (ARN)\nof the resource making a service-to-service request with the ARN that you\nspecify in the policy.",
    "description": "AWS does not support using the specified global condition key. Depending on\nyour use case, you can use the `aws:PrincipalArn` or `aws:SourceArn` global\ncondition keys. For example, instead of `aws:ARN`, use the `aws:PrincipalArn`\nto compare the Amazon Resource Name (ARN) of the principal that made the\nrequest with the ARN that you specify in the policy. Alternatively, use the\n`aws:SourceArn` global condition key to compare the Amazon Resource Name (ARN)\nof the resource making a service-to-service request with the ARN that you\nspecify in the policy.\n\n**Related terms**\n\n  * [AWS global condition context keys](./reference_policies_condition-keys.html)"
  },
  "error_unsupported_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-principal",
    "name": "UnsupportedPrincipal",
    "short_description": "The `Principal` element specifies the principal that is allowed or denied\naccess to a resource. You cannot use the `Principal` element in an IAM\nidentity-based policy. You can use it in the trust policies for IAM roles and\nin resource-based policies. Resource-based policies are policies that you\nembed directly in a resource. For example, you can embed policies in an Amazon\nS3 bucket or an AWS KMS key.",
    "description": "The `Principal` element specifies the principal that is allowed or denied\naccess to a resource. You cannot use the `Principal` element in an IAM\nidentity-based policy. You can use it in the trust policies for IAM roles and\nin resource-based policies. Resource-based policies are policies that you\nembed directly in a resource. For example, you can embed policies in an Amazon\nS3 bucket or an AWS KMS key.\n\n**Related terms**\n\n  * [AWS JSON policy elements: Principal](./reference_policies_elements_principal.html)\n\n  * [Cross account resource access in IAM](./access_policies-cross-account-resource-access.html)"
  },
  "error_unsupported_resource_arn_in_policy": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-resource-arn-in-policy",
    "name": "UnsupportedResourceArnInPolicy",
    "short_description": "Some resource ARNs aren't supported in the `Resource` element of the resource-\nbased policy when the policy is attached to a different resource type. For\nexample, AWS KMS ARNs aren't supported in the `Resource` element for Amazon S3\nbucket policies. Specify a resource ARN that is supported by a resource type\nattached to your resource-based policy.",
    "description": "Some resource ARNs aren't supported in the `Resource` element of the resource-\nbased policy when the policy is attached to a different resource type. For\nexample, AWS KMS ARNs aren't supported in the `Resource` element for Amazon S3\nbucket policies. Specify a resource ARN that is supported by a resource type\nattached to your resource-based policy.\n\n**Related terms**\n\n  * [JSON policy elements: Action](./reference_policies_elements_action.html)"
  },
  "error_unsupported_sid": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-sid",
    "name": "UnsupportedSid",
    "short_description": "The `Sid` element supports uppercase letters, lowercase letters, and numbers.",
    "description": "The `Sid` element supports uppercase letters, lowercase letters, and numbers.\n\n**Related terms**\n\n  * [IAM JSON policy elements: Sid](./reference_policies_elements_sid.html)"
  },
  "error_unsupported_wildcard_in_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-wildcard-in-principal",
    "name": "UnsupportedWildcardInPrincipal",
    "short_description": "The `Principal` element structure supports using a key-value pair. The\nprincipal value specified in the policy includes a wildcard (*). You can't\ninclude a wildcard with the principal key that you specified. For example,\nwhen you specify users in a `Principal` element, you cannot use a wildcard to\nmean \"all users\". You must name a specific user or users. Similarly, when you\nspecify an assumed-role session, you cannot use a wildcard to mean \"all\nsessions\". You must name a specific session. You also cannot use a wildcard to\nmatch part of a name or an ARN.",
    "description": "The `Principal` element structure supports using a key-value pair. The\nprincipal value specified in the policy includes a wildcard (*). You can't\ninclude a wildcard with the principal key that you specified. For example,\nwhen you specify users in a `Principal` element, you cannot use a wildcard to\nmean \"all users\". You must name a specific user or users. Similarly, when you\nspecify an assumed-role session, you cannot use a wildcard to mean \"all\nsessions\". You must name a specific session. You also cannot use a wildcard to\nmatch part of a name or an ARN.\n\nTo resolve this finding, remove the wildcard and provide a more specific\nprincipal.\n\n**Related terms**\n\n  * [AWS JSON policy elements: Principal](./reference_policies_elements_principal.html)"
  },
  "error_missing_brace_in_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-brace-in-variable",
    "name": "MissingBraceInVariable",
    "short_description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy.",
    "description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy.\n\nTo resolve this finding, add the missing brace to make sure the full opening\nand closing set of braces is present.\n\n**Related terms**\n\n  * [IAM policy elements: Variables](./reference_policies_variables.html)"
  },
  "error_missing_quote_in_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-quote-in-variable",
    "name": "MissingQuoteInVariable",
    "short_description": "When you add a variable to your policy, you can specify a default value for\nthe variable. If a variable is not present, AWS uses the default text that you\nprovide.",
    "description": "When you add a variable to your policy, you can specify a default value for\nthe variable. If a variable is not present, AWS uses the default text that you\nprovide.\n\nTo add a default value to a variable, surround the default value with single\nquotes (`' '`), and separate the variable text and the default value with a\ncomma and space (`, `).\n\nFor example, if a principal is tagged with `team=yellow`, they can access the\n`amzn-s3-demo-bucket` Amazon S3 bucket with the name `amzn-s3-demo-bucket-\nyellow`. A policy with this resource might allow team members to access their\nown resources, but not those of other teams. For users without team tags, you\nmight set a default value of `company-wide`. These users can access only the\n`amzn-s3-demo-bucket-company-wide` bucket where they can view broad\ninformation, such as instructions for joining a team.\n\n    \n    \n    \"Resource\":\"arn:aws:s3:::amzn-s3-demo-bucket-${aws:PrincipalTag/team, 'company-wide'}\"\n\n**Related terms**\n\n  * [IAM policy elements: Variables](./reference_policies_variables.html)"
  },
  "error_unsupported_space_in_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-space-in-variable",
    "name": "UnsupportedSpaceInVariable",
    "short_description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy. Although you can\ninclude a space when you specify a default variable, you cannot include a\nspace in the variable name.",
    "description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy. Although you can\ninclude a space when you specify a default variable, you cannot include a\nspace in the variable name.\n\n**Related terms**\n\n  * [IAM policy elements: Variables](./reference_policies_variables.html)"
  },
  "error_empty_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-empty-variable",
    "name": "EmptyVariable",
    "short_description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy.",
    "description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy.\n\n**Related terms**\n\n  * [IAM policy elements: Variables](./reference_policies_variables.html)"
  },
  "error_variable_unsupported_in_element": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-variable-unsupported-in-element",
    "name": "VariableUnsupportedInElement",
    "short_description": "You can use policy variables in the `Resource` element and in string\ncomparisons in the `Condition` element.",
    "description": "You can use policy variables in the `Resource` element and in string\ncomparisons in the `Condition` element.\n\n**Related terms**\n\n  * [IAM policy elements: Variables](./reference_policies_variables.html)"
  },
  "error_variable_unsupported_in_version": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-variable-unsupported-in-version",
    "name": "VariableUnsupportedInVersion",
    "short_description": "To use policy variables, you must include the `Version` element and set it to\na version that supports policy variables. Variables were introduced in version\n`2012-10-17`. Earlier versions of the policy language don't support policy\nvariables. If you don't set the `Version` to `2012-10-17` or later, variables\nlike `${aws:username}` are treated as literal strings in the policy.",
    "description": "To use policy variables, you must include the `Version` element and set it to\na version that supports policy variables. Variables were introduced in version\n`2012-10-17`. Earlier versions of the policy language don't support policy\nvariables. If you don't set the `Version` to `2012-10-17` or later, variables\nlike `${aws:username}` are treated as literal strings in the policy.\n\nA `Version` policy element is different from a policy version. The `Version`\npolicy element is used within a policy and defines the version of the policy\nlanguage. A policy version, is created when you change a customer managed\npolicy in IAM. The changed policy doesn't overwrite the existing policy.\nInstead, IAM creates a new version of the managed policy.\n\n**Related terms**\n\n  * [IAM policy elements: Variables](./reference_policies_variables.html)\n\n  * [IAM JSON policy elements: Version](./reference_policies_elements_version.html)"
  },
  "error_private_ip_address": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-private-ip-address",
    "name": "PrivateIpAddress",
    "short_description": "The global condition key `aws:SourceIp` works only for public IP address\nranges. You receive this error when your policy allows only private IP\naddresses. In this case, the condition would never match.",
    "description": "The global condition key `aws:SourceIp` works only for public IP address\nranges. You receive this error when your policy allows only private IP\naddresses. In this case, the condition would never match.\n\n  * [aws:SourceIp global condition key](./reference_policies_condition-keys.html#condition-keys-sourceip)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "error_private_not_ip_address": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-private-not-ip-address",
    "name": "PrivateNotIpAddress",
    "short_description": "The global condition key `aws:SourceIp` works only for public IP address\nranges. You receive this error when you use the `NotIpAddress` condition\noperator and list only private IP addresses. In this case, the condition would\nalways match and would be ineffective.",
    "description": "The global condition key `aws:SourceIp` works only for public IP address\nranges. You receive this error when you use the `NotIpAddress` condition\noperator and list only private IP addresses. In this case, the condition would\nalways match and would be ineffective.\n\n  * [aws:SourceIp global condition key](./reference_policies_condition-keys.html#condition-keys-sourceip)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "error_policy_size_exceeds_scp_quota": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-policy-size-exceeds-scp-quota",
    "name": "PolicySizeExceedsScpQuota",
    "short_description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Action` or `NotAction` elements. However, these values can include\nwildcards (*) only at the end of the string. This means that you can specify\n`iam:Get*` but not `iam:*role`.",
    "description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Action` or `NotAction` elements. However, these values can include\nwildcards (*) only at the end of the string. This means that you can specify\n`iam:Get*` but not `iam:*role`.\n\nTo specify multiple actions, AWS recommends that you list them individually.\n\n**Related terms**\n\n  * [Quotas for AWS Organizations](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_limits.html)\n\n  * [AWS Organizations service control policies](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)"
  },
  "error_invalid_service_principal_format": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-service-principal-format",
    "name": "InvalidServicePrincipalFormat",
    "short_description": "The value in the condition key-value pair must match a defined service\nprincipal format.",
    "description": "The value in the condition key-value pair must match a defined service\nprincipal format.\n\nA _service principal_ is an identifier that is used to grant permissions to a\nservice. You can specify a service principal in the `Principal` element or as\na value for some global condition keys and service-specific keys. The service\nprincipal is defined by each service.\n\nThe identifier for a service principal includes the service name, and is\nusually in the following format in all lowercase letters:\n\n``service-name`.amazonaws.com`\n\nSome service-specific keys may use a different format for service principals.\nFor example, the `kms:ViaService` condition key requires the following format\nfor service principals in all lowercase letters:\n\n``service-name.AWS_region`.amazonaws.com`\n\n**Related terms**\n\n  * [Service principals](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services)\n\n  * [AWS global condition keys](./reference_policies_condition-keys.html)\n\n  * [`kms:ViaService` condition key](https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-via-service)"
  },
  "error_missing_tag_key_in_condition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-tag-key-in-condition",
    "name": "MissingTagKeyInCondition",
    "short_description": "To control access based on tags, you provide tag information in the [condition\nelement](./reference_policies_elements_condition.html) of a policy.",
    "description": "To control access based on tags, you provide tag information in the [condition\nelement](./reference_policies_elements_condition.html) of a policy.\n\nFor example, to [control access to AWS\nresources](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html#access_tags_control-\nresources), you include the `aws:ResourceTag` condition key. This key requires\nthe format `aws:ResourceTag/`tag-key``. To specify the tag key `owner` and the\ntag value `JaneDoe` in a condition, use the following format.\n\n    \n    \n    \"Condition\": {\n        \"StringEquals\": {\"aws:ResourceTag/owner\": \"JaneDoe\"}\n    }\n\n**Related terms**\n\n  * [Controlling access using tags](./access_iam-tags.html)\n\n  * [Conditions](./reference_policies_elements_condition.html)\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [AWS service condition keys](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "error_invalid_vpc_format": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-vpc-format",
    "name": "InvalidVpcFormat",
    "short_description": "The `aws:SourceVpc` condition key must use the prefix `vpc-` followed by\neither 8 or 17 alphanumeric characters, for example, `vpc-11223344556677889`\nor `vpc-12345678`.",
    "description": "The `aws:SourceVpc` condition key must use the prefix `vpc-` followed by\neither 8 or 17 alphanumeric characters, for example, `vpc-11223344556677889`\nor `vpc-12345678`.\n\n**Related terms**\n\n  * [AWS global condition keys: aws:SourceVpc](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourcevpc)"
  },
  "error_invalid_vpce_format": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-vpce-format",
    "name": "InvalidVpceFormat",
    "short_description": "The `aws:SourceVpce` condition key must use the prefix `vpce-` followed by\neither 8 or 17 alphanumeric characters, for example, `vpce-11223344556677889`\nor `vpce-12345678`.",
    "description": "The `aws:SourceVpce` condition key must use the prefix `vpce-` followed by\neither 8 or 17 alphanumeric characters, for example, `vpce-11223344556677889`\nor `vpce-12345678`.\n\n**Related terms**\n\n  * [AWS global condition keys: aws:SourceVpce](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourcevpce)"
  },
  "error_federated_principal_not_supported": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-federated-principal-not-supported",
    "name": "FederatedPrincipalNotSupported",
    "short_description": "The `Principal` element uses federated principals for trust policies attached\nto IAM roles to provide access through identity federation. Identity policies\nand other resource-based policies don't support a federated identity provider\nin the `Principal` element. For example, you can't use a SAML principal in an\nAmazon S3 bucket policy. Change the `Principal` element to a supported\nprincipal type.",
    "description": "The `Principal` element uses federated principals for trust policies attached\nto IAM roles to provide access through identity federation. Identity policies\nand other resource-based policies don't support a federated identity provider\nin the `Principal` element. For example, you can't use a SAML principal in an\nAmazon S3 bucket policy. Change the `Principal` element to a supported\nprincipal type.\n\n**Related terms**\n\n  * [Creating a role for identity federation](./id_roles_create_for-idp.html)\n\n  * [JSON policy elements: Principal](./reference_policies_elements_principal.html)"
  },
  "error_unsupported_action_for_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-action-for-condition-key",
    "name": "UnsupportedActionForConditionKey",
    "short_description": "Make sure that the condition key in the `Condition` element of the policy\nstatement applies to every action in the `Action` element. To ensure that the\nactions you specify are effectively allowed or denied by your policy, you\nshould move the unsupported actions to a different statement without the\ncondition key.",
    "description": "Make sure that the condition key in the `Condition` element of the policy\nstatement applies to every action in the `Action` element. To ensure that the\nactions you specify are effectively allowed or denied by your policy, you\nshould move the unsupported actions to a different statement without the\ncondition key.\n\n###### Note\n\nIf the `Action` element has actions with wildcards, IAM Access Analyzer\ndoesn't evaluate those actions for this error.\n\n**Related terms**\n\n  * [JSON policy elements: Action](./reference_policies_elements_action.html)"
  },
  "error_unsupported_condition_key_for_service_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-condition-key-for-service-principal",
    "name": "UnsupportedConditionKeyForServicePrincipal",
    "short_description": "You can specify AWS services in the `Principal` element of a resource-based\npolicy using a _service principal_ , which is an identifier for the service.\nYou can't use some condition keys with certain service principals. For\nexample, you can't use the `aws:PrincipalOrgID` condition key with the service\nprincipal `cloudfront.amazonaws.com`. You should remove condition keys that do\nnot apply to the service principal in the `Principal` element.",
    "description": "You can specify AWS services in the `Principal` element of a resource-based\npolicy using a _service principal_ , which is an identifier for the service.\nYou can't use some condition keys with certain service principals. For\nexample, you can't use the `aws:PrincipalOrgID` condition key with the service\nprincipal `cloudfront.amazonaws.com`. You should remove condition keys that do\nnot apply to the service principal in the `Principal` element.\n\n**Related terms**\n\n  * [Service principals](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services)\n\n  * [JSON policy elements: Principal](./reference_policies_elements_principal.html)"
  },
  "error_role_trust_policy_syntax_error_notprincipal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-role-trust-policy-syntax-error-notprincipal",
    "name": "Notprincipal",
    "short_description": "A role trust policy is a resource-based policy that is attached to an IAM\nrole. Trust policies define which principal entities (accounts, users, roles,\nand federated users) can assume the role. Role trust policies do not support\n`NotPrincipal`. Update the policy to use a `Principal` element instead.",
    "description": "A role trust policy is a resource-based policy that is attached to an IAM\nrole. Trust policies define which principal entities (accounts, users, roles,\nand federated users) can assume the role. Role trust policies do not support\n`NotPrincipal`. Update the policy to use a `Principal` element instead.\n\n**Related terms**\n\n  * [JSON policy elements: Principal](./reference_policies_elements_principal.html)\n\n  * [JSON policy elements: NotPrincipal](./reference_policies_elements_notprincipal.html)"
  },
  "error_role_trust_policy_unsupported_wildcard_in_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-role-trust-policy-unsupported-wildcard-in-principal",
    "name": "RoleTrustPolicyUnsupportedWildcardInPrincipal",
    "short_description": "A role trust policy is a resource-based policy that is attached to an IAM\nrole. Trust policies define which principal entities (accounts, users, roles,\nand federated users) can assume the role. `\"Principal:\" \"*\"` is not supported\nin the `Principal` element of a role trust policy. Replace the wildcard with a\nvalid principal value.",
    "description": "A role trust policy is a resource-based policy that is attached to an IAM\nrole. Trust policies define which principal entities (accounts, users, roles,\nand federated users) can assume the role. `\"Principal:\" \"*\"` is not supported\nin the `Principal` element of a role trust policy. Replace the wildcard with a\nvalid principal value.\n\n**Related terms**\n\n  * [JSON policy elements: Principal](./reference_policies_elements_principal.html)"
  },
  "error_role_trust_policy_syntax_error_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-role-trust-policy-syntax-error-resource",
    "name": "Resource",
    "short_description": "A role trust policy is a resource-based policy that is attached to an IAM\nrole. Trust policies define which principal entities (accounts, users, roles,\nand federated users) can assume the role. Role trust policies apply to the\nrole that they are attached to. You cannot specify a `Resource` or\n`NotResource` element in a role trust policy. Remove the `Resource` or\n`NotResource` element.",
    "description": "A role trust policy is a resource-based policy that is attached to an IAM\nrole. Trust policies define which principal entities (accounts, users, roles,\nand federated users) can assume the role. Role trust policies apply to the\nrole that they are attached to. You cannot specify a `Resource` or\n`NotResource` element in a role trust policy. Remove the `Resource` or\n`NotResource` element.\n\n  * [JSON policy elements: Resource](./reference_policies_elements_resource.html)\n\n  * [JSON policy elements: NotResource](./reference_policies_elements_notresource.html)"
  },
  "error_type_mismatch_ip_range": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-type-mismatch-ip-range",
    "name": "TypeMismatchIpRange",
    "short_description": "Update the text to use the IP address condition operator data type, in a CIDR\nformat.",
    "description": "Update the text to use the IP address condition operator data type, in a CIDR\nformat.\n\n**Related terms**\n\n  * [IP address condition operators](./reference_policies_elements_condition_operators.html#Conditions_IPAddress)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)"
  },
  "error_missing_action_for_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-action-for-condition-key",
    "name": "MissingActionForConditionKey",
    "short_description": "The condition key in the `Condition` element of the policy statement is not\nevaluated unless the specified action is in the `Action` element. To ensure\nthat the condition keys you specify are effectively allowed or denied by your\npolicy, add the action to the `Action` element.",
    "description": "The condition key in the `Condition` element of the policy statement is not\nevaluated unless the specified action is in the `Action` element. To ensure\nthat the condition keys you specify are effectively allowed or denied by your\npolicy, add the action to the `Action` element.\n\n**Related terms**\n\n  * [JSON policy elements: Action](./reference_policies_elements_action.html)"
  },
  "error_invalid_federated_principal_syntax_in_role_trust_policy": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-federated-principal-syntax-in-role-trust-policy",
    "name": "InvalidFederatedPrincipalSyntaxInRoleTrustPolicy",
    "short_description": "The principal value specifies a federated principal that does not match the\nexpected format. Update the format of the federated principal to a valid\ndomain name or a SAML metadata ARN.",
    "description": "The principal value specifies a federated principal that does not match the\nexpected format. Update the format of the federated principal to a valid\ndomain name or a SAML metadata ARN.\n\n**Related terms**\n\n  * [Federated users and roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction_access-management.html#intro-access-roles)"
  },
  "error_mismatched_action_for_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-mismatched-action-for-principal",
    "name": "MismatchedActionForPrincipal",
    "short_description": "The action specified in the `Action` element of the policy statement is\ninvalid with the principal specified in the `Principal` element. For example,\nyou can't use a SAML provider principal with the\n`sts:AssumeRoleWithWebIdentity` action. You should use a SAML provider\nprincipal with the `sts:AssumeRoleWithSAML` action or use an OIDC provider\nprincipal with the `sts:AssumeRoleWithWebIdentity` action.",
    "description": "The action specified in the `Action` element of the policy statement is\ninvalid with the principal specified in the `Principal` element. For example,\nyou can't use a SAML provider principal with the\n`sts:AssumeRoleWithWebIdentity` action. You should use a SAML provider\nprincipal with the `sts:AssumeRoleWithSAML` action or use an OIDC provider\nprincipal with the `sts:AssumeRoleWithWebIdentity` action.\n\n**Related terms**\n\n  * [AssumeRoleWithSAML](https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithSAML.html)\n\n  * [AssumeRoleWithWebIdentity](https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html)"
  },
  "error_missing_action_for_roles_anywhere_trust_policy": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-action-for-roles-anywhere-trust-policy",
    "name": "MissingActionForRolesAnywhereTrustPolicy",
    "short_description": "For IAM Roles Anywhere to be able to assume a role and deliver temporary AWS\ncredentials, the role must trust the IAM Roles Anywhere service principal. The\nIAM Roles Anywhere service principal requires the `sts:AssumeRole`,\n`sts:SetSourceIdentity`, and `sts:TagSession` permissions to assume a role. If\nany of the permissions are missing, you must add them to your policy.",
    "description": "For IAM Roles Anywhere to be able to assume a role and deliver temporary AWS\ncredentials, the role must trust the IAM Roles Anywhere service principal. The\nIAM Roles Anywhere service principal requires the `sts:AssumeRole`,\n`sts:SetSourceIdentity`, and `sts:TagSession` permissions to assume a role. If\nany of the permissions are missing, you must add them to your policy.\n\n**Related terms**\n\n  * [Trust model in AWS Identity and Access Management Roles Anywhere](https://docs.aws.amazon.com/rolesanywhere/latest/userguide/trust-model.html)"
  },
  "error_policy_size_exceeds_rcp_quota": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-policy-size-exceeds-rcp-quota",
    "name": "PolicySizeExceedsRcpQuota",
    "short_description": "AWS Organizations resource control policies (RCPs) support specifying values\nin the `Action` element. However, these values can include wildcards (*) only\nat the end of the string. This means that you can specify `s3:Get*` but not\n`s3:*Object`.",
    "description": "AWS Organizations resource control policies (RCPs) support specifying values\nin the `Action` element. However, these values can include wildcards (*) only\nat the end of the string. This means that you can specify `s3:Get*` but not\n`s3:*Object`.\n\nTo specify multiple actions, AWS recommends that you list them individually.\n\n**Related terms**\n\n  * [Quotas for AWS Organizations](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_limits.html)\n\n  * [AWS Organizations resource control policies](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps.html)"
  },
  "error_rcp_syntax_error_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-rcp-syntax-error-principal",
    "name": "Principal",
    "short_description": "AWS Organizations resource control policies (RCPs) only support specifying all\nprincipals (\"`*`\") in the `Principal` element. The `NotPrincipal` element is\nnot supported for RCPs.",
    "description": "AWS Organizations resource control policies (RCPs) only support specifying all\nprincipals (\"`*`\") in the `Principal` element. The `NotPrincipal` element is\nnot supported for RCPs.\n\n**Related terms**\n\n  * [RCP syntax](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps_syntax.html)\n\n  * [Properties of the principal](./reference_policies_condition-keys.html#condition-keys-principal-properties)"
  },
  "error_rcp_syntax_error_allow": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-rcp-syntax-error-allow",
    "name": "Allow",
    "short_description": "AWS Organizations resource control policies (RCPs) only support specifying all\nprincipals (\"`*`\") in the `Principal` element and all resources (\"`*`\") in the\n`Resource` element. The `Condition` element with an effect of `Allow` is not\nsupported for RCPs.",
    "description": "AWS Organizations resource control policies (RCPs) only support specifying all\nprincipals (\"`*`\") in the `Principal` element and all resources (\"`*`\") in the\n`Resource` element. The `Condition` element with an effect of `Allow` is not\nsupported for RCPs.\n\n**Related terms**\n\n  * [RCP syntax](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps_syntax.html)\n\n  * [Properties of the principal](./reference_policies_condition-keys.html#condition-keys-principal-properties)\n\n  * [Properties of the resource](./reference_policies_condition-keys.html#condition-keys-resource-properties)"
  },
  "error_rcp_syntax_error_notaction": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-rcp-syntax-error-notaction",
    "name": "Notaction",
    "short_description": "AWS Organizations resource control policies (RCPs) do not support the\n`NotAction` element. Use the `Action` element.",
    "description": "AWS Organizations resource control policies (RCPs) do not support the\n`NotAction` element. Use the `Action` element.\n\n**Related terms**\n\n  * [RCP syntax](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps_syntax.html)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)\n\n  * [IAM JSON policy elements: NotAction](./reference_policies_elements_notaction.html)"
  },
  "error_rcp_syntax_error_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-rcp-syntax-error-action",
    "name": "Action",
    "short_description": "AWS Organizations resource control policies (RCPs) only support specifying\nselect service prefixes in the `Action` element.",
    "description": "AWS Organizations resource control policies (RCPs) only support specifying\nselect service prefixes in the `Action` element.\n\n**Related terms**\n\n  * [RCP syntax](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps_syntax.html)\n\n  * [List of AWS services that support RCPs](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps.html#rcp-supported-services)"
  },
  "error_missing_arn_account": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-arn-account",
    "name": "MissingArnAccount",
    "short_description": "Include an account ID in the resource ARN. Account IDs are 12-digit integers.\nTo learn how to view your account ID, see [Finding your AWS account\nID](https://docs.aws.amazon.com/general/latest/gr/acct-\nidentifiers.html#FindingYourAccountIdentifiers).",
    "description": "Include an account ID in the resource ARN. Account IDs are 12-digit integers.\nTo learn how to view your account ID, see [Finding your AWS account\nID](https://docs.aws.amazon.com/general/latest/gr/acct-\nidentifiers.html#FindingYourAccountIdentifiers).\n\n**Related terms**\n\n  * [Policy resources](./reference_policies_elements_resource.html)\n\n  * [Account Identifiers](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html)\n\n  * [Resource ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [AWS service resources with ARN formats](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)"
  },
  "general_warning_create_slr_with_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-not-resource",
    "name": "CreateSlrWithNotResource",
    "short_description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using\n`iam:CreateServiceLinkedRole` in a policy with the `NotResource` element can\nallow creating unintended service-linked roles for multiple resources. AWS\nrecommends that you specify allowed ARNs in the `Resource` element instead.",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using\n`iam:CreateServiceLinkedRole` in a policy with the `NotResource` element can\nallow creating unintended service-linked roles for multiple resources. AWS\nrecommends that you specify allowed ARNs in the `Resource` element instead.\n\n  * [CreateServiceLinkedRole operation](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceLinkedRole.html)\n\n  * [IAM JSON policy elements: NotResource](./reference_policies_elements_notresource.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "general_warning_create_slr_with_star_in_action_and_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-action-and-not-resource",
    "name": "CreateSlrWithStarInActionAndNotResource",
    "short_description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Policies\nwith a wildcard (*) in the `Action` and that include the `NotResource` element\ncan allow creation of unintended service-linked roles for multiple resources.\nAWS recommends that you specify allowed ARNs in the `Resource` element\ninstead.",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Policies\nwith a wildcard (*) in the `Action` and that include the `NotResource` element\ncan allow creation of unintended service-linked roles for multiple resources.\nAWS recommends that you specify allowed ARNs in the `Resource` element\ninstead.\n\n  * [CreateServiceLinkedRole operation](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceLinkedRole.html)\n\n  * [IAM JSON policy elements: NotResource](./reference_policies_elements_notresource.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "general_warning_create_slr_with_not_action_and_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-not-action-and-not-resource",
    "name": "CreateSlrWithNotActionAndNotResource",
    "short_description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using the\n`NotAction` element with the `NotResource` element can allow creating\nunintended service-linked roles for multiple resources. AWS recommends that\nyou rewrite the policy to allow `iam:CreateServiceLinkedRole` on a limited\nlist of ARNs in the `Resource` element instead. You can also add\n`iam:CreateServiceLinkedRole` to the `NotAction` element.",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using the\n`NotAction` element with the `NotResource` element can allow creating\nunintended service-linked roles for multiple resources. AWS recommends that\nyou rewrite the policy to allow `iam:CreateServiceLinkedRole` on a limited\nlist of ARNs in the `Resource` element instead. You can also add\n`iam:CreateServiceLinkedRole` to the `NotAction` element.\n\n  * [CreateServiceLinkedRole operation](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceLinkedRole.html)\n\n  * [IAM JSON policy elements: NotAction](./reference_policies_elements_notaction.html)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)\n\n  * [IAM JSON policy elements: NotResource](./reference_policies_elements_notresource.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "general_warning_create_slr_with_star_in_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-resource",
    "name": "CreateSlrWithStarInResource",
    "short_description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using\n`iam:CreateServiceLinkedRole` in a policy with a wildcard (*) in the\n`Resource` element can allow creating unintended service-linked roles for\nmultiple resources. AWS recommends that you specify allowed ARNs in the\n`Resource` element instead.",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using\n`iam:CreateServiceLinkedRole` in a policy with a wildcard (*) in the\n`Resource` element can allow creating unintended service-linked roles for\nmultiple resources. AWS recommends that you specify allowed ARNs in the\n`Resource` element instead.\n\n  * [CreateServiceLinkedRole operation](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceLinkedRole.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)\n\n### AWS managed policies with this general warning\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nSome of those use cases are for power users within your account. The following\nAWS managed policies provide power user access and grant permissions to create\n[service-linked roles](./id_roles_create-service-linked-role.html) for any AWS\nservice. AWS recommends that you attach the following AWS managed policies to\nonly IAM identities that you consider power users.\n\n  * [PowerUserAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/PowerUserAccess)\n\n  * [AlexaForBusinessFullAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AlexaForBusinessFullAccess)\n\n  * [AWSOrganizationsServiceTrustPolicy](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AWSOrganizationsServiceTrustPolicy) \u00e2\u0080\u0093 This AWS managed policy provides permissions for use by the AWS Organizations service-linked role. This role allows Organizations to create additional service-linked roles for other services in your AWS organization."
  },
  "general_warning_create_slr_with_star_in_action_and_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-action-and-resource",
    "name": "CreateSlrWithStarInActionAndResource",
    "short_description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Policies\nwith a wildcard (*) in the `Action` and `Resource` elements can allow creating\nunintended service-linked roles for multiple resources. This allows creating a\nservice-linked role when you specify `\"Action\": \"*\"`, `\"Action\": \"iam:*\"`, or\n`\"Action\": \"iam:Create*\"`. AWS recommends that you specify allowed ARNs in the\n`Resource` element instead.",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Policies\nwith a wildcard (*) in the `Action` and `Resource` elements can allow creating\nunintended service-linked roles for multiple resources. This allows creating a\nservice-linked role when you specify `\"Action\": \"*\"`, `\"Action\": \"iam:*\"`, or\n`\"Action\": \"iam:Create*\"`. AWS recommends that you specify allowed ARNs in the\n`Resource` element instead.\n\n  * [CreateServiceLinkedRole operation](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceLinkedRole.html)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)\n\n### AWS managed policies with this general warning\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nSome of those use cases are for administrators within your account. The\nfollowing AWS managed policies provide administrator access and grant\npermissions to create [service-linked roles](./id_roles_create-service-linked-\nrole.html) for any AWS service. AWS recommends that you attach the following\nAWS managed policies to only the IAM identities that you consider\nadministrators.\n\n  * [AdministratorAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AdministratorAccess)\n\n  * [IAMFullAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/IAMFullAccess)"
  },
  "general_warning_create_slr_with_star_in_resource_and_not_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-resource-and-not-action",
    "name": "CreateSlrWithStarInResourceAndNotAction",
    "short_description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using the\n`NotAction` element in a policy with a wildcard (*) in the `Resource` element\ncan allow creating unintended service-linked roles for multiple resources. AWS\nrecommends that you specify allowed ARNs in the `Resource` element instead.\nYou can also add `iam:CreateServiceLinkedRole` to the `NotAction` element.",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using the\n`NotAction` element in a policy with a wildcard (*) in the `Resource` element\ncan allow creating unintended service-linked roles for multiple resources. AWS\nrecommends that you specify allowed ARNs in the `Resource` element instead.\nYou can also add `iam:CreateServiceLinkedRole` to the `NotAction` element.\n\n  * [CreateServiceLinkedRole operation](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateServiceLinkedRole.html)\n\n  * [IAM JSON policy elements: NotAction](./reference_policies_elements_notaction.html)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "general_warning_deprecated_global_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-deprecated-global-condition-key",
    "name": "DeprecatedGlobalConditionKey",
    "short_description": "The policy includes a deprecated global condition key. Update the condition\nkey in the condition key-value pair to use a supported global condition key.",
    "description": "The policy includes a deprecated global condition key. Update the condition\nkey in the condition key-value pair to use a supported global condition key.\n\n  * [Global condition keys](./reference_policies_condition-keys.html)"
  },
  "general_warning_invalid_date_value": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-invalid-date-value",
    "name": "InvalidDateValue",
    "short_description": "Unix Epoch time describes a point in time that has elapsed since January 1,\n1970, minus leap seconds. Epoch time might not resolve to the precise time\nthat you expect. AWS recommends that you use the W3C standard for date and\ntime formats. For example, you could specify a complete date, such as YYYY-MM-\nDD (1997-07-16), or you could also append the time to the second, such as\nYYYY-MM-DDThh:mm:ssTZD (1997-07-16T19:20:30+01:00).",
    "description": "Unix Epoch time describes a point in time that has elapsed since January 1,\n1970, minus leap seconds. Epoch time might not resolve to the precise time\nthat you expect. AWS recommends that you use the W3C standard for date and\ntime formats. For example, you could specify a complete date, such as YYYY-MM-\nDD (1997-07-16), or you could also append the time to the second, such as\nYYYY-MM-DDThh:mm:ssTZD (1997-07-16T19:20:30+01:00).\n\n  * [W3C Date and Time Formats](https://www.w3.org/TR/NOTE-datetime)\n\n  * [IAM JSON policy elements: Version](./reference_policies_elements_version.html)\n\n  * [aws:CurrentTime global condition key](./reference_policies_condition-keys.html#condition-keys-currenttime)"
  },
  "general_warning_invalid_role_reference": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-invalid-role-reference",
    "name": "InvalidRoleReference",
    "short_description": "AWS recommends that you specify the Amazon Resource Name (ARN) for an IAM role\ninstead of its principal ID. When IAM saves the policy, it will transform the\nARN into the principal ID for the existing role. AWS includes a safety\nprecaution. If someone deletes and recreates the role, it will have a new ID,\nand the policy won't match the new role's ID.",
    "description": "AWS recommends that you specify the Amazon Resource Name (ARN) for an IAM role\ninstead of its principal ID. When IAM saves the policy, it will transform the\nARN into the principal ID for the existing role. AWS includes a safety\nprecaution. If someone deletes and recreates the role, it will have a new ID,\nand the policy won't match the new role's ID.\n\n  * [Specifying a principal: IAM roles](./reference_policies_elements_principal.html#principal-roles)\n\n  * [IAM ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [IAM unique IDs](./reference_identifiers.html#identifiers-unique-ids)"
  },
  "general_warning_invalid_user_reference": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-invalid-user-reference",
    "name": "InvalidUserReference",
    "short_description": "AWS recommends that you specify the Amazon Resource Name (ARN) for an IAM user\ninstead of its principal ID. When IAM saves the policy, it will transform the\nARN into the principal ID for the existing user. AWS includes a safety\nprecaution. If someone deletes and recreates the user, it will have a new ID,\nand the policy won't match the new user's ID.",
    "description": "AWS recommends that you specify the Amazon Resource Name (ARN) for an IAM user\ninstead of its principal ID. When IAM saves the policy, it will transform the\nARN into the principal ID for the existing user. AWS includes a safety\nprecaution. If someone deletes and recreates the user, it will have a new ID,\nand the policy won't match the new user's ID.\n\n  * [Specifying a principal: IAM users](./reference_policies_elements_principal.html#principal-users)\n\n  * [IAM ARNs](./reference_identifiers.html#identifiers-arns)\n\n  * [IAM unique IDs](./reference_identifiers.html#identifiers-unique-ids)"
  },
  "general_warning_missing_version": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-missing-version",
    "name": "MissingVersion",
    "short_description": "AWS recommends that you include the optional `Version` parameter in your\npolicy. If you do not include a Version element, the value defaults to\n`2012-10-17`, but newer features, such as policy variables, will not work with\nyour policy. For example, variables such as `${aws:username}` aren't\nrecognized as variables and are instead treated as literal strings in the\npolicy.",
    "description": "AWS recommends that you include the optional `Version` parameter in your\npolicy. If you do not include a Version element, the value defaults to\n`2012-10-17`, but newer features, such as policy variables, will not work with\nyour policy. For example, variables such as `${aws:username}` aren't\nrecognized as variables and are instead treated as literal strings in the\npolicy.\n\n  * [IAM JSON policy elements: Version](./reference_policies_elements_version.html)"
  },
  "general_warning_unique_sids_recommended": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-unique-sids-recommended",
    "name": "UniqueSidsRecommended",
    "short_description": "AWS recommends that you use unique statement IDs. The `Sid` (statement ID)\nelement allows you to enter an optional identifier that you provide for the\npolicy statement. You can assign a statement ID value to each statement in a\nstatement array using the `SID` element.",
    "description": "AWS recommends that you use unique statement IDs. The `Sid` (statement ID)\nelement allows you to enter an optional identifier that you provide for the\npolicy statement. You can assign a statement ID value to each statement in a\nstatement array using the `SID` element.\n\n**Related terms**\n\n  * [IAM JSON policy elements: Sid](./reference_policies_elements_sid.html)"
  },
  "general_warning_wildcard_without_like_operator": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-wildcard-without-like-operator",
    "name": "WildcardWithoutLikeOperator",
    "short_description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. When you specify a condition value that uses a wildcard\n(*, ?), you must use the `Like` version of the condition operator. For\nexample, instead of the `StringEquals` string condition operator, use\n`StringLike`.",
    "description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. When you specify a condition value that uses a wildcard\n(*, ?), you must use the `Like` version of the condition operator. For\nexample, instead of the `StringEquals` string condition operator, use\n`StringLike`.\n\n    \n    \n    \"Condition\": {\"StringLike\": {\"aws:PrincipalTag/job-category\": \"admin-*\"}}\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)\n\n### AWS managed policies with this general warning\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nThe following AWS managed policies include wildcards in their condition value\nwithout a condition operator that includes `Like` for pattern-matching. When\nusing the AWS managed policy as a reference to create your customer managed\npolicy, AWS recommends that you use a condition operator that supports\npattern-matching with wildcards (*, ?), such as `StringLike`.\n\n  * [AWSGlueConsoleSageMakerNotebookFullAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AWSGlueConsoleSageMakerNotebookFullAccess)"
  },
  "general_warning_policy_size_exceeds_identity_policy_quota": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-policy-size-exceeds-identity-policy-quota",
    "name": "PolicySizeExceedsIdentityPolicyQuota",
    "short_description": "You can attach up to 10 managed policies to an IAM identity (user, group of\nusers, or role). However, the size of each managed policy cannot exceed the\ndefault quota of 6,144 characters. IAM does not count white space when\ncalculating the size of a policy against this quota. Quotas, also referred to\nas limits in AWS, are the maximum values for the resources, actions, and items\nin your AWS account.",
    "description": "You can attach up to 10 managed policies to an IAM identity (user, group of\nusers, or role). However, the size of each managed policy cannot exceed the\ndefault quota of 6,144 characters. IAM does not count white space when\ncalculating the size of a policy against this quota. Quotas, also referred to\nas limits in AWS, are the maximum values for the resources, actions, and items\nin your AWS account.\n\nAdditionally, you can add as many inline policies as you want to an IAM\nidentity. However, the sum size of all inline policies per identity cannot\nexceed the specified quota.\n\nIf your policy is larger than the quota, you can organize your policy into\nmultiple statements and group the statements into multiple policies.\n\n**Related terms**\n\n  * [IAM and AWS STS character quotas](./reference_iam-quotas.html)\n\n  * [Multiple statements and multiple policies](./access_policies.html#policies-syntax-multiples)\n\n  * [IAM customer managed policies](./access_policies_managed-vs-inline.html#customer-managed-policies)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)\n\n  * [IAM JSON policy grammar](./reference_policies_grammar.html)\n\n### AWS managed policies with this general warning\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nThe following AWS managed policies grant permissions to actions across many\nAWS services and exceed the maximum policy size. When using the AWS managed\npolicy as a reference to create your managed policy, you must split the policy\ninto multiple policies.\n\n  * [ReadOnlyAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/ReadOnlyAccess)\n\n  * [AWSSupportServiceRolePolicy](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AWSSupportServiceRolePolicy)"
  },
  "general_warning_policy_size_exceeds_resource_policy_quota": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-policy-size-exceeds-resource-policy-quota",
    "name": "PolicySizeExceedsResourcePolicyQuota",
    "short_description": "Resource-based policies are JSON policy documents that you attach to a\nresource, such as an Amazon S3 bucket. These policies grant the specified\nprincipal permission to perform specific actions on that resource and define\nunder what conditions this applies. The size of resource-based policies cannot\nexceed the quota set for that resource. Quotas, also referred to as limits in\nAWS, are the maximum values for the resources, actions, and items in your AWS\naccount.",
    "description": "Resource-based policies are JSON policy documents that you attach to a\nresource, such as an Amazon S3 bucket. These policies grant the specified\nprincipal permission to perform specific actions on that resource and define\nunder what conditions this applies. The size of resource-based policies cannot\nexceed the quota set for that resource. Quotas, also referred to as limits in\nAWS, are the maximum values for the resources, actions, and items in your AWS\naccount.\n\nIf your policy is larger than the quota, you can organize your policy into\nmultiple statements and group the statements into multiple policies.\n\n**Related terms**\n\n  * [Resource-based policies](./access_policies.html#policies_resource-based)\n\n  * [Amazon S3 bucket policies](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-policies.html)\n\n  * [Multiple statements and multiple policies](./access_policies.html#policies-syntax-multiples)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)\n\n  * [IAM JSON policy grammar](./reference_policies_grammar.html)"
  },
  "general_warning_type_mismatch": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch",
    "name": "TypeMismatch",
    "short_description": "Update the text to use the supported condition operator data type.",
    "description": "Update the text to use the supported condition operator data type.\n\nFor example, the `aws:MultiFactorAuthPresent` global condition key requires a\ncondition operator with the `Boolean` data type. If you provide a date or an\ninteger, the data type won't match.\n\n**Related terms**\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)"
  },
  "general_warning_type_mismatch_boolean": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-boolean",
    "name": "TypeMismatchBoolean",
    "short_description": "Update the text to use a Boolean condition operator data type, such as `true`\nor `false`.",
    "description": "Update the text to use a Boolean condition operator data type, such as `true`\nor `false`.\n\nFor example, the `aws:MultiFactorAuthPresent` global condition key requires a\ncondition operator with the `Boolean` data type. If you provide a date or an\ninteger, the data type won't match.\n\n**Related terms**\n\n  * [Boolean condition operators](./reference_policies_elements_condition_operators.html#Conditions_Boolean)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)"
  },
  "general_warning_type_mismatch_date": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-date",
    "name": "TypeMismatchDate",
    "short_description": "Update the text to use the date condition operator data type, in a `YYYY-MM-\nDD` or other ISO 8601 date time format.",
    "description": "Update the text to use the date condition operator data type, in a `YYYY-MM-\nDD` or other ISO 8601 date time format.\n\n**Related terms**\n\n  * [Date condition operators](./reference_policies_elements_condition_operators.html#Conditions_Date)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)"
  },
  "general_warning_type_mismatch_number": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-number",
    "name": "TypeMismatchNumber",
    "short_description": "Update the text to use the numeric condition operator data type.",
    "description": "Update the text to use the numeric condition operator data type.\n\n**Related terms**\n\n  * [Numeric condition operators](./reference_policies_elements_condition_operators.html#Conditions_Numeric)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)"
  },
  "general_warning_type_mismatch_string": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-string",
    "name": "TypeMismatchString",
    "short_description": "Update the text to use the string condition operator data type.",
    "description": "Update the text to use the string condition operator data type.\n\n**Related terms**\n\n  * [String condition operators](./reference_policies_elements_condition_operators.html#Conditions_String)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)"
  },
  "general_warning_specific_github_repo_and_branch_recommended": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-specific-github-repo-and-branch-recommended",
    "name": "SpecificGithubRepoAndBranchRecommended",
    "short_description": "If you use GitHub as an OIDC IdP, best practice is to limit the entities that\ncan assume the role associated with the IAM IdP. When you include a\n`Condition` statement in a role trust policy, you can limit the role to a\nspecific GitHub organization, repository, or branch. You can use the condition\nkey `token.actions.githubusercontent.com:sub` to limit access. We recommend\nthat you limit the condition to a specific set of repositories or branches. If\nyou use a wildcard (`*`) in `token.actions.githubusercontent.com:sub`, then\nGitHub Actions from organizations or repositories outside of your control are\nable to assume roles associated with the GitHub IAM IdP in your AWS account.",
    "description": "If you use GitHub as an OIDC IdP, best practice is to limit the entities that\ncan assume the role associated with the IAM IdP. When you include a\n`Condition` statement in a role trust policy, you can limit the role to a\nspecific GitHub organization, repository, or branch. You can use the condition\nkey `token.actions.githubusercontent.com:sub` to limit access. We recommend\nthat you limit the condition to a specific set of repositories or branches. If\nyou use a wildcard (`*`) in `token.actions.githubusercontent.com:sub`, then\nGitHub Actions from organizations or repositories outside of your control are\nable to assume roles associated with the GitHub IAM IdP in your AWS account.\n\n**Related terms**\n\n  * [Configuring a role for GitHub OIDC identity provider](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_oidc.html#idp_oidc_Create_GitHub)"
  },
  "general_warning_policy_size_exceeds_role_trust_policy_quota": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-policy-size-exceeds-role-trust-policy-quota",
    "name": "PolicySizeExceedsRoleTrustPolicyQuota",
    "short_description": "IAM and AWS STS have quotas that limit the size of role trust policies. The\ncharacters in the role trust policy, excluding whitespace, exceed the\ncharacter maximum. We recommend that you request a role trust policy length\nquota increase using Service Quotas and the AWS Support Center Console.",
    "description": "IAM and AWS STS have quotas that limit the size of role trust policies. The\ncharacters in the role trust policy, excluding whitespace, exceed the\ncharacter maximum. We recommend that you request a role trust policy length\nquota increase using Service Quotas and the AWS Support Center Console.\n\n**Related terms**\n\n  * [IAM and AWS STS quotas, name requirements, and character limits](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html)"
  },
  "general_warning_rcp_missing_related_principal_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-rcp-missing-related-principal-condition-key",
    "name": "RcpMissingRelatedPrincipalConditionKey",
    "short_description": "AWS Organizations resource control policies (RCPs) can impact IAM roles,\nusers, and AWS service principals. To prevent unintended impact to services\nacting on your behalf using a service principal, add the following statement\nto your `Condition` element:",
    "description": "AWS Organizations resource control policies (RCPs) can impact IAM roles,\nusers, and AWS service principals. To prevent unintended impact to services\nacting on your behalf using a service principal, add the following statement\nto your `Condition` element:\n\n    \n    \n    \"BoolIfExists\": { \"aws:PrincipalIsAWSService\": \"false\"}\n\n**Related terms**\n\n  * [RCP syntax](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps_syntax.html)\n\n  * [Properties of the principal](./reference_policies_condition-keys.html#condition-keys-principal-properties)"
  },
  "general_warning_rcp_missing_related_service_principal_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-rcp-missing-related-service-principal-condition-key",
    "name": "RcpMissingRelatedServicePrincipalConditionKey",
    "short_description": "AWS Organizations resource control policies (RCPs) can impact IAM roles,\nusers, and AWS service principals. To prevent unintended impact to your\nprincipals, add the following statement to your `Condition` element:",
    "description": "AWS Organizations resource control policies (RCPs) can impact IAM roles,\nusers, and AWS service principals. To prevent unintended impact to your\nprincipals, add the following statement to your `Condition` element:\n\n    \n    \n    \"BoolIfExists\": { \"aws:PrincipalIsAWSService\": \"true\"}\n\n**Related terms**\n\n  * [RCP syntax](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps_syntax.html)\n\n  * [Properties of the principal](./reference_policies_condition-keys.html#condition-keys-principal-properties)"
  },
  "general_warning_rcp_missing_service_condition_key_null_check": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-rcp-missing-service-condition-key-null-check",
    "name": "RcpMissingServiceConditionKeyNullCheck",
    "short_description": "AWS Organizations resource control policies (RCPs) can impact IAM roles,\nusers, and AWS service principals. To prevent unintended impact to services\nacting on your behalf using a service principal, add one of the following\nstatements to your `Condition` element whenever the specified key is used:",
    "description": "AWS Organizations resource control policies (RCPs) can impact IAM roles,\nusers, and AWS service principals. To prevent unintended impact to services\nacting on your behalf using a service principal, add one of the following\nstatements to your `Condition` element whenever the specified key is used:\n\n    \n    \n    \"Null\": { \"aws:SourceAccount\": \"false\"}\n\nor\n\n    \n    \n    \"Null\": { \"aws:SourceArn\": \"false\"}\n\n**Related terms**\n\n  * [RCP syntax](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_rcps_syntax.html)\n\n  * [Properties of the principal](./reference_policies_condition-keys.html#condition-keys-principal-properties)"
  },
  "security_warning_allow_with_not_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-allow-with-not-principal",
    "name": "AllowWithNotPrincipal",
    "short_description": "Using `\"Effect\": \"Allow\"` with the `NotPrincipal` can be overly permissive.\nFor example, this can grant permissions to anonymous principals. AWS\nrecommends that you specify principals that need access using the `Principal`\nelement. Alternatively, you can allow broad access and then add another\nstatement that uses the `NotPrincipal` element with `\u00e2\u0080\u009cEffect\u00e2\u0080\u009d:\n\u00e2\u0080\u009cDeny\u00e2\u0080\u009d`.",
    "description": "Using `\"Effect\": \"Allow\"` with the `NotPrincipal` can be overly permissive.\nFor example, this can grant permissions to anonymous principals. AWS\nrecommends that you specify principals that need access using the `Principal`\nelement. Alternatively, you can allow broad access and then add another\nstatement that uses the `NotPrincipal` element with `\u00e2\u0080\u009cEffect\u00e2\u0080\u009d:\n\u00e2\u0080\u009cDeny\u00e2\u0080\u009d`.\n\n  * [AWS JSON policy elements: Principal](./reference_policies_elements_principal.html)\n\n  * [AWS JSON policy elements: NotPrincipal](./reference_policies_elements_notprincipal.html)"
  },
  "security_warning_forallvalues_with_single_valued_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-forallvalues-with-single-valued-key",
    "name": "ForallvaluesWithSingleValuedKey",
    "short_description": "AWS recommends that you use the `ForAllValues` only with multivalued\nconditions. The `ForAllValues` set operator tests whether the value of every\nmember of the request set is a subset of the condition key set. The condition\nreturns true if every key value in the request matches at least one value in\nthe policy. It also returns true if there are no keys in the request, or if\nthe key values resolve to a null data set, such as an empty string.",
    "description": "AWS recommends that you use the `ForAllValues` only with multivalued\nconditions. The `ForAllValues` set operator tests whether the value of every\nmember of the request set is a subset of the condition key set. The condition\nreturns true if every key value in the request matches at least one value in\nthe policy. It also returns true if there are no keys in the request, or if\nthe key values resolve to a null data set, such as an empty string.\n\nTo learn whether a condition supports a single value or multiple values,\nreview the [Actions, resources, and condition\nkeys](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html) page for the service. Condition keys with the `ArrayOf` data\ntype prefix are multivalued condition keys. For example, Amazon SES supports\nkeys with single values (`String`) and the `ArrayOfString` multivalued data\ntype.\n\n  * [Multivalued context keys](./reference_policies_condition-single-vs-multi-valued-context-keys.html#reference_policies_condition-multi-valued-context-keys)"
  },
  "security_warning_pass_role_with_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-not-resource",
    "name": "PassRoleWithNotResource",
    "short_description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using `iam:PassRole` in a policy with the\n`NotResource` element can allow your principals to access more services or\nfeatures than you intended. AWS recommends that you specify allowed ARNs in\nthe `Resource` element instead. Additionally, you can reduce permissions to a\nsingle service by using the `iam:PassedToService` condition key.",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using `iam:PassRole` in a policy with the\n`NotResource` element can allow your principals to access more services or\nfeatures than you intended. AWS recommends that you specify allowed ARNs in\nthe `Resource` element instead. Additionally, you can reduce permissions to a\nsingle service by using the `iam:PassedToService` condition key.\n\n  * [Passing a role to a service](./id_roles_use_passrole.html)\n\n  * [iam:PassedToService](./reference_policies_iam-condition-keys.html#ck_PassedToService)\n\n  * [IAM JSON policy elements: NotResource](./reference_policies_elements_notresource.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "security_warning_pass_role_with_star_in_action_and_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-action-and-not-resource",
    "name": "PassRoleWithStarInActionAndNotResource",
    "short_description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies with a wildcard (*) in the `Action` and\nthat include the `NotResource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies with a wildcard (*) in the `Action` and\nthat include the `NotResource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.\n\n  * [Passing a role to a service](./id_roles_use_passrole.html)\n\n  * [iam:PassedToService](./reference_policies_iam-condition-keys.html#ck_PassedToService)\n\n  * [IAM JSON policy elements: NotResource](./reference_policies_elements_notresource.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "security_warning_pass_role_with_not_action_and_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-not-action-and-not-resource",
    "name": "PassRoleWithNotActionAndNotResource",
    "short_description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using the `NotAction` element and listing some\nresources in the `NotResource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using the `NotAction` element and listing some\nresources in the `NotResource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.\n\n  * [Passing a role to a service](./id_roles_use_passrole.html)\n\n  * [iam:PassedToService](./reference_policies_iam-condition-keys.html#ck_PassedToService)\n\n  * [IAM JSON policy elements: NotAction](./reference_policies_elements_notaction.html)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)\n\n  * [IAM JSON policy elements: NotResource](./reference_policies_elements_notresource.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "security_warning_pass_role_with_star_in_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-resource",
    "name": "PassRoleWithStarInResource",
    "short_description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies that allow `iam:PassRole` and that include\na wildcard (*) in the `Resource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies that allow `iam:PassRole` and that include\na wildcard (*) in the `Resource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.\n\nSome AWS services include their service namespace in the name of their role.\nThis policy check takes these conventions into account while analyzing the\npolicy to generate findings. For example, the following resource ARN might not\ngenerate a finding:\n\n    \n    \n    arn:aws:iam::*:role/Service*\n\n  * [Passing a role to a service](./id_roles_use_passrole.html)\n\n  * [iam:PassedToService](./reference_policies_iam-condition-keys.html#ck_PassedToService)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)\n\n### AWS managed policies with this security warning\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nOne of those use cases is for administrators within your account. The\nfollowing AWS managed policies provide administrator access and grant\npermissions to pass any IAM role to any service. AWS recommends that you\nattach the following AWS managed policies only to IAM identities that you\nconsider administrators.\n\n  * [AdministratorAccess-Amplify](https://console.aws.amazon.com/iam/home#/policies/arn:aws:iam::aws:policy/AdministratorAccess-Amplify)\n\nThe following AWS managed policies include permissions to `iam:PassRole` with\na wildcard (*) in the resource and are on a [deprecation\npath](./access_policies_managed-deprecated.html). For each of these policies,\nwe updated the permission guidance, such as recommending a new AWS managed\npolicy that supports the use case. To view alternatives to these policies, see\nthe guides for [each service](./reference_aws-services-that-work-with-\niam.html).\n\n  * AWSElasticBeanstalkFullAccess\n\n  * AWSElasticBeanstalkService\n\n  * AWSLambdaFullAccess\n\n  * AWSLambdaReadOnlyAccess\n\n  * AWSOpsWorksFullAccess\n\n  * AWSOpsWorksRole\n\n  * AWSDataPipelineRole\n\n  * AmazonDynamoDBFullAccesswithDataPipeline\n\n  * AmazonElasticMapReduceFullAccess\n\n  * AmazonDynamoDBFullAccesswithDataPipeline\n\n  * AmazonEC2ContainerServiceFullAccess\n\nThe following AWS managed policies provide permissions for only [service-\nlinked roles](./id_roles_create-service-linked-role.html), which allow AWS\nservices to perform actions on your behalf. You cannot attach these policies\nto your IAM identities.\n\n  * [AWSServiceRoleForAmazonEKSNodegroup](https://console.aws.amazon.com/iam/home#/policies/arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForAmazonEKSNodegroup)"
  },
  "security_warning_pass_role_with_star_in_action_and_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-action-and-resource",
    "name": "PassRoleWithStarInActionAndResource",
    "short_description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies with a wildcard (*) in the `Action` and\n`Resource` elements can allow your principals to access more services or\nfeatures than you intended. AWS recommends that you specify allowed ARNs in\nthe `Resource` element instead. Additionally, you can reduce permissions to a\nsingle service by using the `iam:PassedToService` condition key.",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies with a wildcard (*) in the `Action` and\n`Resource` elements can allow your principals to access more services or\nfeatures than you intended. AWS recommends that you specify allowed ARNs in\nthe `Resource` element instead. Additionally, you can reduce permissions to a\nsingle service by using the `iam:PassedToService` condition key.\n\n  * [Passing a role to a service](./id_roles_use_passrole.html)\n\n  * [iam:PassedToService](./reference_policies_iam-condition-keys.html#ck_PassedToService)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)\n\n### AWS managed policies with this security warning\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nSome of those use cases are for administrators within your account. The\nfollowing AWS managed policies provide administrator access and grant\npermissions to pass any IAM role to any AWS service. AWS recommends that you\nattach the following AWS managed policies to only the IAM identities that you\nconsider administrators.\n\n  * [AdministratorAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AdministratorAccess)\n\n  * [IAMFullAccess](https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/IAMFullAccess)"
  },
  "security_warning_pass_role_with_star_in_resource_and_not_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-resource-and-not-action",
    "name": "PassRoleWithStarInResourceAndNotAction",
    "short_description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using the `NotAction` element in a policy with a\nwildcard (*) in the `Resource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using the `NotAction` element in a policy with a\nwildcard (*) in the `Resource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.\n\n  * [Passing a role to a service](./id_roles_use_passrole.html)\n\n  * [iam:PassedToService](./reference_policies_iam-condition-keys.html#ck_PassedToService)\n\n  * [IAM JSON policy elements: NotAction](./reference_policies_elements_notaction.html)\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "security_warning_missing_paired_condition_keys": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-missing-paired-condition-keys",
    "name": "MissingPairedConditionKeys",
    "short_description": "Some condition keys are more secure when paired with other related condition\nkeys. AWS recommends that you include the related condition keys in the same\ncondition block as the existing condition key. This makes the permissions\ngranted through the policy more secure.",
    "description": "Some condition keys are more secure when paired with other related condition\nkeys. AWS recommends that you include the related condition keys in the same\ncondition block as the existing condition key. This makes the permissions\ngranted through the policy more secure.\n\nFor example, you can use the `aws:VpcSourceIp` condition key to compare the IP\naddress from which a request was made with the IP address that you specify in\nthe policy. AWS recommends that you add the related `aws:SourceVPC` condition\nkey. This checks whether the request comes from the VPC that you specify in\nthe policy _and_ the IP address that you specify.\n\n**Related terms**\n\n  * [aws:VpcSourceIp global condition key](./reference_policies_condition-keys.html#condition-keys-vpcsourceip)\n\n  * [aws:SourceVPC global condition key](./reference_policies_condition-keys.html#condition-keys-sourcevpc)\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [Condition element](./reference_policies_elements_condition.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "security_warning_deny_with_unsupported_tag_condition_key_for_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-deny-with-unsupported-tag-condition-key-for-service",
    "name": "DenyWithUnsupportedTagConditionKeyForService",
    "short_description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith `\"Effect\": \"Deny\"` can be overly permissive, because the condition is\nignored for that service. AWS recommends that you remove the service actions\nthat don\u00e2\u0080\u0099t support the condition key and create another statement to deny\naccess to specific resources for those actions.",
    "description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith `\"Effect\": \"Deny\"` can be overly permissive, because the condition is\nignored for that service. AWS recommends that you remove the service actions\nthat don\u00e2\u0080\u0099t support the condition key and create another statement to deny\naccess to specific resources for those actions.\n\nIf you use the `aws:ResourceTag` condition key and it\u00e2\u0080\u0099s not supported by a\nservice action, then the key is not included in the request context. In this\ncase, the condition in the `Deny` statement always returns `false` and the\naction is never denied. This happens even if the resource is tagged correctly.\n\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags\nto control access to that service\u00e2\u0080\u0099s resources. This is known as [attribute-\nbased access control (ABAC)](./introduction_attribute-based-access-\ncontrol.html). Services that don\u00e2\u0080\u0099t support these keys require you to control\naccess to resources using [resource-based access control\n(RBAC)](./introduction_attribute-based-access-\ncontrol.html#introduction_attribute-based-access-control_compare-rbac).\n\n###### Note\n\nSome services allow support for the `aws:ResourceTag` condition key for a\nsubset of their resources and actions. IAM Access Analyzer returns findings\nfor the service actions that are not supported. For example, Amazon S3\nsupports `aws:ResourceTag` for a subset of its resources. To view all of the\nresource types available in Amazon S3 that support the `aws:ResourceTag`\ncondition key, see [Resource types defined by Amazon\nS3](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/list_amazons3.html#amazons3-resources-for-iam-\npolicies) in the Service Authorization Reference.\n\nFor example, assume that you want to deny access to untag delete specific\nresources that are tagged with the key-value pair `status=Confidential`. Also\nassume that AWS Lambda allows you to tag and untag resources, but doesn\u00e2\u0080\u0099t\nsupport the `aws:ResourceTag` condition key. To deny the delete actions for\nAWS App Mesh and AWS Backup if this tag is present, use the `aws:ResourceTag`\ncondition key. For Lambda, use a resource naming convention that includes the\n`\"Confidential\"` prefix. Then include a separate statement that prevents\ndeleting resources with that naming convention.\n\n    \n    \n    {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Sid\": \"DenyDeleteSupported\",\n                \"Effect\": \"Deny\",\n                \"Action\": [\n                    \"appmesh:DeleteMesh\", \n                    \"backup:DeleteBackupPlan\"\n                    ],\n                \"Resource\": \"*\",\n                \"Condition\": {\n                    \"StringEquals\": {\n                        \"aws:ResourceTag/status\": \"Confidential\"\n                    }\n                }\n            },\n            {\n                \"Sid\": \"DenyDeleteUnsupported\",\n                \"Effect\": \"Deny\",\n                \"Action\": \"lambda:DeleteFunction\",\n                \"Resource\": \"arn:aws:lambda:*:123456789012:function:status-Confidential*\"\n            }\n        ]\n    }\n\n###### Warning\n\nDo not use the\n\u00e2\u0080\u00a6[IfExists](./reference_policies_elements_condition_operators.html#Conditions_IfExists)\nversion of the condition operator as a workaround for this finding. This means\n\"Deny the action if the key is present in the request context and the values\nmatch. Otherwise, deny the action.\" In the previous example, including the\n`lambda:DeleteFunction` action in the `DenyDeleteSupported` statement with the\n`StringEqualsIfExists` operator always denies the action. For that action, the\nkey is not present in the context, and every attempt to delete that resource\ntype is denied, regardless of whether the resource is tagged.\n\n**Related terms**\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [Comparing ABAC to RBAC](./introduction_attribute-based-access-control.html#introduction_attribute-based-access-control_compare-rbac)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)\n\n  * [Condition element](./reference_policies_elements_condition.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "security_warning_deny_notaction_with_unsupported_tag_condition_key_for_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-deny-notaction-with-unsupported-tag-condition-key-for-service",
    "name": "DenyNotactionWithUnsupportedTagConditionKeyForService",
    "short_description": "Using tag condition keys in the `Condition` element of a policy with the\nelement `NotAction` and `\"Effect\": \"Deny\"` can be overly permissive. The\ncondition is ignored for service actions that don\u00e2\u0080\u0099t support the condition\nkey. AWS recommends that you rewrite the logic to deny a list of actions.",
    "description": "Using tag condition keys in the `Condition` element of a policy with the\nelement `NotAction` and `\"Effect\": \"Deny\"` can be overly permissive. The\ncondition is ignored for service actions that don\u00e2\u0080\u0099t support the condition\nkey. AWS recommends that you rewrite the logic to deny a list of actions.\n\nIf you use the `aws:ResourceTag` condition key with `NotAction`, any new or\nexisting service actions that don\u00e2\u0080\u0099t support the key are not denied. AWS\nrecommends that you explicitly list the actions that you want to deny. IAM\nAccess Analyzer returns a separate finding for listed actions that don\u00e2\u0080\u0099t\nsupport the `aws:ResourceTag` condition key. For more information, see\nSecurity Warning \u00e2\u0080\u0093 Deny with unsupported tag condition key for service.\n\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags\nto control access to that service\u00e2\u0080\u0099s resources. This is known as [attribute-\nbased access control (ABAC)](./introduction_attribute-based-access-\ncontrol.html). Services that don\u00e2\u0080\u0099t support these keys require you to control\naccess to resources using [resource-based access control\n(RBAC)](./introduction_attribute-based-access-\ncontrol.html#introduction_attribute-based-access-control_compare-rbac).\n\n**Related terms**\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [Comparing ABAC to RBAC](./introduction_attribute-based-access-control.html#introduction_attribute-based-access-control_compare-rbac)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)\n\n  * [Condition element](./reference_policies_elements_condition.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "security_warning_restrict_access_to_service_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-restrict-access-to-service-principal",
    "name": "RestrictAccessToServicePrincipal",
    "short_description": "You can specify AWS services in the `Principal` element of a resource-based\npolicy using a service principal, which is an identifier for the service. When\ngranting access to a service principal to act on your behalf, restrict access.\nYou can prevent overly permissive policies by using the `aws:SourceArn`,\n`aws:SourceAccount`, `aws:SourceOrgID`, or `aws:SourceOrgPaths` condition keys\nto restrict access to a specific source, such as a specific resource ARN, AWS\naccount, organization ID, or organization paths. Restricting access helps you\nprevent a security issue called _the confused deputy problem_.",
    "description": "You can specify AWS services in the `Principal` element of a resource-based\npolicy using a service principal, which is an identifier for the service. When\ngranting access to a service principal to act on your behalf, restrict access.\nYou can prevent overly permissive policies by using the `aws:SourceArn`,\n`aws:SourceAccount`, `aws:SourceOrgID`, or `aws:SourceOrgPaths` condition keys\nto restrict access to a specific source, such as a specific resource ARN, AWS\naccount, organization ID, or organization paths. Restricting access helps you\nprevent a security issue called _the confused deputy problem_.\n\n**Related terms**\n\n  * [AWS service principals](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services)\n\n  * [AWS global condition keys: aws:SourceAccount](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceaccount)\n\n  * [AWS global condition keys: aws:SourceArn](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourcearn)\n\n  * [AWS global condition keys: aws:SourceOrgId](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceorgid)\n\n  * [AWS global condition keys: aws:SourceOrgPaths](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceorgpaths)\n\n  * [The confused deputy problem](https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html)"
  },
  "security_warning_missing_condition_key_for_oidc_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-missing-condition-key-for-oidc-principal",
    "name": "MissingConditionKeyForOidcPrincipal",
    "short_description": "Using an Open ID Connect principal without a condition can be overly\npermissive. Add condition keys with a prefix that matches your federated OIDC\nprincipals to ensure that only the intended identity provider assumes the\nrole.",
    "description": "Using an Open ID Connect principal without a condition can be overly\npermissive. Add condition keys with a prefix that matches your federated OIDC\nprincipals to ensure that only the intended identity provider assumes the\nrole.\n\n**Related terms**\n\n  * [Creating a role for web identity or OpenID Connect Federation (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_oidc.html)"
  },
  "security_warning_missing_github_repo_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-missing-github-repo-condition-key",
    "name": "MissingGithubRepoConditionKey",
    "short_description": "If you use GitHub as an OIDC IdP, best practice is to limit the entities that\ncan assume the role associated with the IAM IdP. When you include a\n`Condition` statement in a role trust policy, you can limit the role to a\nspecific GitHub organization, repository, or branch. You can use the condition\nkey `token.actions.githubusercontent.com:sub` to limit access. We recommend\nthat you limit the condition to a specific set of repositories or branches. If\nyou do not include this condition, then GitHub Actions from organizations or\nrepositories outside of your control are able to assume roles associated with\nthe GitHub IAM IdP in your AWS account.",
    "description": "If you use GitHub as an OIDC IdP, best practice is to limit the entities that\ncan assume the role associated with the IAM IdP. When you include a\n`Condition` statement in a role trust policy, you can limit the role to a\nspecific GitHub organization, repository, or branch. You can use the condition\nkey `token.actions.githubusercontent.com:sub` to limit access. We recommend\nthat you limit the condition to a specific set of repositories or branches. If\nyou do not include this condition, then GitHub Actions from organizations or\nrepositories outside of your control are able to assume roles associated with\nthe GitHub IAM IdP in your AWS account.\n\n**Related terms**\n\n  * [Configuring a role for GitHub OIDC identity provider](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_oidc.html#idp_oidc_Create_GitHub)"
  },
  "security_warning_string_like_operator_with_arn_condition_keys": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-string-like-operator-with-arn-condition-keys",
    "name": "StringLikeOperatorWithArnConditionKeys",
    "short_description": "AWS recommends that you use ARN operators instead of string operators when\ncomparing ARNs to ensure proper access restriction based on ARN condition\nvalues. Update the `StringLike` operator to the `ArnLike` operator in your\n`Condition` element whenever the specified key is used.",
    "description": "AWS recommends that you use ARN operators instead of string operators when\ncomparing ARNs to ensure proper access restriction based on ARN condition\nvalues. Update the `StringLike` operator to the `ArnLike` operator in your\n`Condition` element whenever the specified key is used.\n\nThese AWS managed policies are exceptions to this security warning:\n\n  * [AmazonSecurityLakeAdministrator](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AmazonSecurityLakeAdministrator.html)\n\n  * [AWSCodePipeline_FullAccess](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AWSCodePipeline_FullAccess.html)\n\n  * [AWSCodePipeline_ReadOnlyAccess](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AWSCodePipeline_ReadOnlyAccess.html)\n\n  * [AWSMarketplaceFullAccess](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AWSMarketplaceFullAccess.html)\n\n  * [AWSMarketplaceImageBuildFullAccess](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AWSMarketplaceImageBuildFullAccess.html)\n\n  * [S3UnlockBucketPolicy](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/S3UnlockBucketPolicy.html)\n\n  * [SecurityLakeResourceManagementServiceRolePolicy](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/SecurityLakeResourceManagementServiceRolePolicy.html)\n\n  * [SQSUnlockQueuePolicy](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/SQSUnlockQueuePolicy.html)\n\n**Related terms**\n\n  * [Amazon Resource Name (ARN) condition operators](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_ARN)\n\n  * [String condition operators](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html#Conditions_String)\n\n  * [AWS managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html#aws-managed-policies)"
  },
  "security_warning_foranyvalue_with_audience_claim_type": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-foranyvalue-with-audience-claim-type",
    "name": "ForanyvalueWithAudienceClaimType",
    "short_description": "AWS recommends that you do not use the `ForAnyValue` set operator with single-\nvalued condition keys. Use set operators only with multivalued condition keys.\nRemove the `ForAnyValue` set operator.",
    "description": "AWS recommends that you do not use the `ForAnyValue` set operator with single-\nvalued condition keys. Use set operators only with multivalued condition keys.\nRemove the `ForAnyValue` set operator.\n\n**Related terms**\n\n  * [Single-valued vs. multivalued context keys](./reference_policies_condition-single-vs-multi-valued-context-keys.html)\n\n  * [Single-valued context key policy examples](./reference_policies_condition_examples-single-valued-context-keys.html)"
  },
  "suggestion_empty_array_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-action",
    "name": "EmptyArrayAction",
    "short_description": "Statements must include either an `Action` or `NotAction` element that\nincludes a set of actions. When the element is empty, the policy statement\nprovides no permissions. Specify actions in the `Action` element.",
    "description": "Statements must include either an `Action` or `NotAction` element that\nincludes a set of actions. When the element is empty, the policy statement\nprovides no permissions. Specify actions in the `Action` element.\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)"
  },
  "suggestion_empty_array_condition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-condition",
    "name": "EmptyArrayCondition",
    "short_description": "The optional `Condition` element structure requires that you use a condition\noperator and a key-value pair. When the condition value is empty, the\ncondition returns `true` and the policy statement provides no permissions.\nSpecify a condition value.",
    "description": "The optional `Condition` element structure requires that you use a condition\noperator and a key-value pair. When the condition value is empty, the\ncondition returns `true` and the policy statement provides no permissions.\nSpecify a condition value.\n\n  * [IAM JSON policy elements: Condition ](./reference_policies_elements_condition.html)"
  },
  "suggestion_empty_array_condition_forallvalues": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-condition-forallvalues",
    "name": "EmptyArrayConditionForallvalues",
    "short_description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. The `ForAllValues` set operator tests whether the value\nof every member of the request set is a subset of the condition key set.",
    "description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. The `ForAllValues` set operator tests whether the value\nof every member of the request set is a subset of the condition key set.\n\nWhen you use `ForAllValues` with an empty condition key, the condition matches\nonly if there are no keys in the request. AWS recommends that if you want to\ntest whether a request context is empty, use the `Null` condition operator\ninstead.\n\n  * [Multivalued context keys](./reference_policies_condition-single-vs-multi-valued-context-keys.html#reference_policies_condition-multi-valued-context-keys)\n\n  * [Null condition operator](./reference_policies_elements_condition_operators.html#Conditions_Null)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "suggestion_empty_array_condition_foranyvalue": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-condition-foranyvalue",
    "name": "EmptyArrayConditionForanyvalue",
    "short_description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. The `ForAnyValues` set operator tests whether at least\none member of the set of request values matches at least one member of the set\nof condition key values.",
    "description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. The `ForAnyValues` set operator tests whether at least\none member of the set of request values matches at least one member of the set\nof condition key values.\n\nWhen you use `ForAnyValues` with an empty condition key, the condition never\nmatches. This means that the statement has no effect on the policy. AWS\nrecommends that you rewrite the condition.\n\n  * [Multivalued context keys](./reference_policies_condition-single-vs-multi-valued-context-keys.html#reference_policies_condition-multi-valued-context-keys)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "suggestion_empty_array_condition_ifexists": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-condition-ifexists",
    "name": "EmptyArrayConditionIfexists",
    "short_description": "The `...IfExists` suffix edits a condition operator. It means that if the\npolicy key is present in the context of the request, process the key as\nspecified in the policy. If the key is not present, evaluate the condition\nelement as true.",
    "description": "The `...IfExists` suffix edits a condition operator. It means that if the\npolicy key is present in the context of the request, process the key as\nspecified in the policy. If the key is not present, evaluate the condition\nelement as true.\n\nWhen you use `...IfExists` with an empty condition key, the condition matches\nonly if there are no keys in the request. AWS recommends that if you want to\ntest whether a request context is empty, use the `Null` condition operator\ninstead.\n\n  * [...IfExists condition operators](./reference_policies_elements_condition_operators.html#Conditions_IfExists)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "suggestion_empty_array_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-principal",
    "name": "EmptyArrayPrincipal",
    "short_description": "You must use the `Principal` or `NotPrincipal` element in the trust policies\nfor IAM roles and in resource-based policies. Resource-based policies are\npolicies that you embed directly in a resource.",
    "description": "You must use the `Principal` or `NotPrincipal` element in the trust policies\nfor IAM roles and in resource-based policies. Resource-based policies are\npolicies that you embed directly in a resource.\n\nWhen you provide an empty array in a statement's `Principal` element, the\nstatement has no effect on the policy. AWS recommends that you specify the\nprincipals that should have access to the resource.\n\n  * [IAM JSON policy elements: Principal](./reference_policies_elements_principal.html)\n\n  * [IAM JSON policy elements: NotPrincipal](./reference_policies_elements_notprincipal.html)"
  },
  "suggestion_empty_array_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-resource",
    "name": "EmptyArrayResource",
    "short_description": "Statements must include either a `Resource` or a `NotResource` element.",
    "description": "Statements must include either a `Resource` or a `NotResource` element.\n\nWhen you provide an empty array in a statement's resource element, the\nstatement has no effect on the policy. AWS recommends that you specify Amazon\nResource Names (ARNs) for resources.\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)\n\n  * [IAM JSON policy elements: NotResource](./reference_policies_elements_notresource.html)"
  },
  "suggestion_empty_object_condition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-object-condition",
    "name": "EmptyObjectCondition",
    "short_description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair.",
    "description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair.\n\nWhen you provide an empty object in a statement's condition element, the\nstatement has no effect on the policy. Remove the optional element or specify\nconditions.\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "suggestion_empty_object_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-object-principal",
    "name": "EmptyObjectPrincipal",
    "short_description": "You must use the `Principal` or `NotPrincipal` element in the trust policies\nfor IAM roles and in resource-based policies. Resource-based policies are\npolicies that you embed directly in a resource.",
    "description": "You must use the `Principal` or `NotPrincipal` element in the trust policies\nfor IAM roles and in resource-based policies. Resource-based policies are\npolicies that you embed directly in a resource.\n\nWhen you provide an empty object in a statement's `Principal` element, the\nstatement has no effect on the policy. AWS recommends that you specify the\nprincipals that should have access to the resource.\n\n  * [IAM JSON policy elements: Principal](./reference_policies_elements_principal.html)\n\n  * [IAM JSON policy elements: NotPrincipal](./reference_policies_elements_notprincipal.html)"
  },
  "suggestion_empty_sid_value": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-sid-value",
    "name": "EmptySidValue",
    "short_description": "The optional `Sid` (statement ID) element allows you to enter an identifier\nthat you provide for the policy statement. You can assign an `Sid` value to\neach statement in a statement array. If you choose to use the `Sid` element,\nyou must provide a string value.",
    "description": "The optional `Sid` (statement ID) element allows you to enter an identifier\nthat you provide for the policy statement. You can assign an `Sid` value to\neach statement in a statement array. If you choose to use the `Sid` element,\nyou must provide a string value.\n\n**Related terms**\n\n  * [IAM JSON policy elements: Sid](./reference_policies_elements_sid.html)"
  },
  "suggestion_improve_ip_range": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-improve-ip-range",
    "name": "ImproveIpRange",
    "short_description": "IP address conditions must be in the standard CIDR format, such as\n203.0.113.0/24 or 2001:DB8:1234:5678::/64. When you include non-zero bits\nafter the masked bits, they are not considered for the condition. AWS\nrecommends that you use the new address included in the message.",
    "description": "IP address conditions must be in the standard CIDR format, such as\n203.0.113.0/24 or 2001:DB8:1234:5678::/64. When you include non-zero bits\nafter the masked bits, they are not considered for the condition. AWS\nrecommends that you use the new address included in the message.\n\n  * [IP address condition operators](./reference_policies_elements_condition_operators.html#Conditions_IPAddress)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "suggestion_null_with_qualifier": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-null-with-qualifier",
    "name": "NullWithQualifier",
    "short_description": "In the\u00c2 `Condition`\u00c2 element, you build expressions in which you use\u00c2\ncondition operators like equal or less than to compare a condition in the\npolicy against keys and values in the request context. For requests that\ninclude multiple values for a single condition key, you must use the\u00c2\n`ForAllValues`\u00c2 or\u00c2 `ForAnyValue`\u00c2 set operators.",
    "description": "In the\u00c2 `Condition`\u00c2 element, you build expressions in which you use\u00c2\ncondition operators like equal or less than to compare a condition in the\npolicy against keys and values in the request context. For requests that\ninclude multiple values for a single condition key, you must use the\u00c2\n`ForAllValues`\u00c2 or\u00c2 `ForAnyValue`\u00c2 set operators.\n\nWhen you use the `Null` condition operator with `ForAllValues`, the statement\nalways returns `true`. When you use the `Null` condition operator with\n`ForAnyValue`, the statement always returns `false`. AWS recommends that you\nuse the `StringLike` condition operator with these set operators.\n\n**Related terms**\n\n  * [Multivalued context keys](./reference_policies_condition-single-vs-multi-valued-context-keys.html#reference_policies_condition-multi-valued-context-keys)\n\n  * [Null condition operator](./reference_policies_elements_condition_operators.html#Conditions_Null)\n\n  * [Condition element](./reference_policies_elements_condition.html)"
  },
  "suggestion_private_ip_address_subset": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-private-ip-address-subset",
    "name": "PrivateIpAddressSubset",
    "short_description": "The global condition key `aws:SourceIp` works only for public IP address\nranges.",
    "description": "The global condition key `aws:SourceIp` works only for public IP address\nranges.\n\nWhen your `Condition` element includes a mix of private and public IP\naddresses, the statement might not have the desired effect. You can specify\nprivate IP addresses using `aws:VpcSourceIP`.\n\n###### Note\n\nThe global condition key `aws:VpcSourceIP` matches only if the request\noriginates from the specified IP address and it goes through a VPC endpoint.\n\n  * [aws:SourceIp global condition key](./reference_policies_condition-keys.html#condition-keys-sourceip)\n\n  * [aws:VpcSourceIp global condition key](./reference_policies_condition-keys.html#condition-keys-vpcsourceip)\n\n  * [IP address condition operators](./reference_policies_elements_condition_operators.html#Conditions_IPAddress)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "suggestion_private_not_ip_address_subset": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-private-not-ip-address-subset",
    "name": "PrivateNotIpAddressSubset",
    "short_description": "The global condition key `aws:SourceIp` works only for public IP address\nranges.",
    "description": "The global condition key `aws:SourceIp` works only for public IP address\nranges.\n\nWhen your `Condition` element includes the `NotIpAddress` condition operator\nand a mix of private and public IP addresses, the statement might not have the\ndesired effect. Every public IP addresses that is not specified in the policy\nwill match. No private IP addresses will match. To achieve this effect, you\ncan use `NotIpAddress` with `aws:VpcSourceIP` and specify the private IP\naddresses that should not match.\n\n  * [aws:SourceIp global condition key](./reference_policies_condition-keys.html#condition-keys-sourceip)\n\n  * [aws:VpcSourceIp global condition key](./reference_policies_condition-keys.html#condition-keys-vpcsourceip)\n\n  * [IP address condition operators](./reference_policies_elements_condition_operators.html#Conditions_IPAddress)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "suggestion_redundant_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-action",
    "name": "RedundantAction",
    "short_description": "When you use wildcards (*) in the `Action` element, you can include redundant\npermissions. AWS recommends that you review your policy and include only the\npermissions that you need. This can help you remove redundant actions.",
    "description": "When you use wildcards (*) in the `Action` element, you can include redundant\npermissions. AWS recommends that you review your policy and include only the\npermissions that you need. This can help you remove redundant actions.\n\nFor example, the following actions include the `iam:GetCredentialReport`\naction twice.\n\n    \n    \n    \"Action\": [\n            \"iam:Get*\",\n            \"iam:List*\",\n            \"iam:GetCredentialReport\"\n        ],\n\nIn this example, permissions are defined for every IAM action that begins with\n`Get` or `List`. When IAM adds additional get or list operations, this policy\nwill allow them. You might want to allow all of these read-only actions. The\n`iam:GetCredentialReport` action is already included as part of `iam:Get*`. To\nremove the duplicate permissions, you could remove `iam:GetCredentialReport`.\n\nYou receive a finding for this policy check when all of the contents of an\naction are redundant. In this example, if the element included\n`iam:*CredentialReport`, it is not considered redundant. That includes\n`iam:GetCredentialReport`, which is redundant, and\n`iam:GenerateCredentialReport`, which is not. Removing either `iam:Get*` or\n`iam:*CredentialReport` would change the policy's permissions.\n\n  * [IAM JSON policy elements: Action](./reference_policies_elements_action.html)\n\n### AWS managed policies with this suggestion\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nRedundant actions do not affect the permissions granted by the policy. When\nusing an AWS managed policy as a reference to create your customer managed\npolicy, AWS recommends that you remove redundant actions from your policy."
  },
  "suggestion_redundant_condition_value_num": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-condition-value-num",
    "name": "RedundantConditionValueNum",
    "short_description": "When you use numeric condition operators for similar values in a condition\nkey, you can create an overlap that results in redundant permissions.",
    "description": "When you use numeric condition operators for similar values in a condition\nkey, you can create an overlap that results in redundant permissions.\n\nFor example, the following `Condition` element includes multiple\n`aws:MultiFactorAuthAge` conditions that have an age overlap of 1200 seconds.\n\n    \n    \n    \"Condition\": {\n            \"NumericLessThan\": {\n              \"aws:MultiFactorAuthAge\": [\n                \"2700\",\n                \"3600\"\n              ]\n            }\n          }\n\nIn this example, the permissions are defined if multi-factor authentication\n(MFA) was completed less than 3600 seconds (1 hour) ago. You could remove the\nredundant `2700` value.\n\n  * [Numeric condition operators](./reference_policies_elements_condition_operators.html#Conditions_Numeric)\n\n  * [IAM JSON policy elements: Condition](./reference_policies_elements_condition.html)"
  },
  "suggestion_redundant_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-resource",
    "name": "RedundantResource",
    "short_description": "When you use wildcards (*) in Amazon Resource Names (ARNs), you can create\nredundant resource permissions.",
    "description": "When you use wildcards (*) in Amazon Resource Names (ARNs), you can create\nredundant resource permissions.\n\nFor example, the following `Resource` element includes multiple ARNs with\nredundant permissions.\n\n    \n    \n    \"Resource\": [\n                \"arn:aws:iam::111122223333:role/jane-admin\",\n                \"arn:aws:iam::111122223333:role/jane-s3only\",\n                \"arn:aws:iam::111122223333:role/jane*\"\n            ],\n\nIn this example, the permissions are defined for any role with a name starting\nwith `jane`. You could remove the redundant `jane-admin` and `jane-s3only`\nARNs without changing the resulting permissions. This does make the policy\ndynamic. It will define permissions for any future roles that begin with\n`jane`. If the intention of the policy is to allow access to a static number\nof roles, then remove the last ARN and list only the ARNs that should be\ndefined.\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)\n\n### AWS managed policies with this suggestion\n\n[AWS managed policies](./access_policies_managed-vs-inline.html#aws-managed-\npolicies) enable you to get started with AWS by assigning permissions based on\ngeneral AWS use cases.\n\nRedundant resources do not affect the permissions granted by the policy. When\nusing an AWS managed policy as a reference to create your customer managed\npolicy, AWS recommends that you remove redundant resources from your policy."
  },
  "suggestion_redundant_statement": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-statement",
    "name": "RedundantStatement",
    "short_description": "The `Statement` element is the main element for a policy. This element is\nrequired. The `Statement` element can contain a single statement or an array\nof individual statements.",
    "description": "The `Statement` element is the main element for a policy. This element is\nrequired. The `Statement` element can contain a single statement or an array\nof individual statements.\n\nWhen you include the same statement more than once in a long policy, the\nstatements are is redundant. You can remove one of the statements without\naffecting the permissions granted by the policy. When someone edits a policy,\nthey might change one of the statements without updating the duplicate. This\nmight result in more permissions than intended.\n\n  * [IAM JSON policy elements: Statement](./reference_policies_elements_statement.html)"
  },
  "suggestion_wildcard_in_service_name": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-wildcard-in-service-name",
    "name": "WildcardInServiceName",
    "short_description": "When you include the name of an AWS service in a policy, AWS recommends that\nyou do not include wildcards (*, ?). This might add permissions for future\nservices that you do not intend. For example, there are more than a dozen AWS\nservices with the word `*code*` in their name.",
    "description": "When you include the name of an AWS service in a policy, AWS recommends that\nyou do not include wildcards (*, ?). This might add permissions for future\nservices that you do not intend. For example, there are more than a dozen AWS\nservices with the word `*code*` in their name.\n\n    \n    \n    \"Resource\": \"arn:aws:*code*::111122223333:*\"\n\n  * [IAM JSON policy elements: Resource](./reference_policies_elements_resource.html)"
  },
  "suggestion_allow_with_unsupported_tag_condition_key_for_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-allow-with-unsupported-tag-condition-key-for-service",
    "name": "AllowWithUnsupportedTagConditionKeyForService",
    "short_description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith `\"Effect\": \"Allow\"` does not affect the permissions granted by the\npolicy, because the condition is ignored for that service action. AWS\nrecommends that you remove the actions for services that don\u00e2\u0080\u0099t support the\ncondition key and create another statement to allow access to specific\nresources in that service.",
    "description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith `\"Effect\": \"Allow\"` does not affect the permissions granted by the\npolicy, because the condition is ignored for that service action. AWS\nrecommends that you remove the actions for services that don\u00e2\u0080\u0099t support the\ncondition key and create another statement to allow access to specific\nresources in that service.\n\nIf you use the `aws:ResourceTag` condition key and it\u00e2\u0080\u0099s not supported by a\nservice action, then the key is not included in the request context. In this\ncase, the condition in the `Allow` statement always returns `false` and the\naction is never allowed. This happens even if the resource is tagged\ncorrectly.\n\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags\nto control access to that service\u00e2\u0080\u0099s resources. This is known as [attribute-\nbased access control (ABAC)](./introduction_attribute-based-access-\ncontrol.html). Services that don\u00e2\u0080\u0099t support these keys require you to control\naccess to resources using [resource-based access control\n(RBAC)](./introduction_attribute-based-access-\ncontrol.html#introduction_attribute-based-access-control_compare-rbac).\n\n###### Note\n\nSome services allow support for the `aws:ResourceTag` condition key for a\nsubset of their resources and actions. IAM Access Analyzer returns findings\nfor the service actions that are not supported. For example, Amazon S3\nsupports `aws:ResourceTag` for a subset of its resources. To view all of the\nresource types available in Amazon S3 that support the `aws:ResourceTag`\ncondition key, see [Resource types defined by Amazon\nS3](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/list_amazons3.html#amazons3-resources-for-iam-\npolicies) in the Service Authorization Reference.\n\nFor example, assume that you want to allow team members to view details for\nspecific resources that are tagged with the key-value pair `team=BumbleBee`.\nAlso assume that AWS Lambda allows you to tag resources, but doesn\u00e2\u0080\u0099t support\nthe `aws:ResourceTag` condition key. To allow view actions for AWS App Mesh\nand AWS Backup if this tag is present, use the `aws:ResourceTag` condition\nkey. For Lambda, use a resource naming convention that includes the team name\nas a prefix. Then include a separate statement that allows viewing resources\nwith that naming convention.\n\n    \n    \n    {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Sid\": \"AllowViewSupported\",\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"appmesh:DescribeMesh\", \n                    \"backup:GetBackupPlan\"\n                    ],\n                \"Resource\": \"*\",\n                \"Condition\": {\n                    \"StringEquals\": {\n                        \"aws:ResourceTag/team\": \"BumbleBee\"\n                    }\n                }\n            },\n            {\n                \"Sid\": \"AllowViewUnsupported\",\n                \"Effect\": \"Allow\",\n                \"Action\": \"lambda:GetFunction\",\n                \"Resource\": \"arn:aws:lambda:*:123456789012:function:team-BumbleBee*\"\n            }\n        ]\n    }\n\n###### Warning\n\nDo not use the `Not` [version of the condition\noperator](./reference_policies_elements_condition_operators.html) with\n`\"Effect\": \"Allow\"` as a workaround for this finding. These condition\noperators provide negated matching. This means that after the condition is\nevaluated, the result is negated. In the previous example, including the\n`lambda:GetFunction` action in the `AllowViewSupported` statement with the\n`StringNotEquals` operator always allows the action, regardless of whether the\nresource is tagged.\n\nDo not use the\n\u00e2\u0080\u00a6[IfExists](./reference_policies_elements_condition_operators.html#Conditions_IfExists)\nversion of the condition operator as a workaround for this finding. This means\n\"Allow the action if the key is present in the request context and the values\nmatch. Otherwise, allow the action.\" In the previous example, including the\n`lambda:GetFunction` action in the `AllowViewSupported` statement with the\n`StringEqualsIfExists` operator always allows the action. For that action, the\nkey is not present in the context, and every attempt to view that resource\ntype is allowed, regardless of whether the resource is tagged.\n\n**Related terms**\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)\n\n  * [Condition element](./reference_policies_elements_condition.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "suggestion_allow_notaction_with_unsupported_tag_condition_key_for_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-allow-notaction-with-unsupported-tag-condition-key-for-service",
    "name": "AllowNotactionWithUnsupportedTagConditionKeyForService",
    "short_description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith the element `NotAction` and `\"Effect\": \"Allow\"` does not affect the\npermissions granted by the policy. The condition is ignored for service\nactions that don\u00e2\u0080\u0099t support the condition key. AWS recommends that you\nrewrite the logic to allow a list of actions.",
    "description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith the element `NotAction` and `\"Effect\": \"Allow\"` does not affect the\npermissions granted by the policy. The condition is ignored for service\nactions that don\u00e2\u0080\u0099t support the condition key. AWS recommends that you\nrewrite the logic to allow a list of actions.\n\nIf you use the `aws:ResourceTag` condition key with `NotAction`, any new or\nexisting service actions that don\u00e2\u0080\u0099t support the key are not allowed. AWS\nrecommends that you explicitly list the actions that you want to allow. IAM\nAccess Analyzer returns a separate finding for listed actions that don\u00e2\u0080\u0099t\nsupport the `aws:ResourceTag` condition key. For more information, see\nSuggestion \u00e2\u0080\u0093 Allow with unsupported tag condition key for service.\n\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags\nto control access to that service\u00e2\u0080\u0099s resources. This is known as [attribute-\nbased access control (ABAC)](./introduction_attribute-based-access-\ncontrol.html). Services that don\u00e2\u0080\u0099t support these keys require you to control\naccess to resources using [resource-based access control\n(RBAC)](./introduction_attribute-based-access-\ncontrol.html#introduction_attribute-based-access-control_compare-rbac).\n\n**Related terms**\n\n  * [Global condition keys](./reference_policies_condition-keys.html)\n\n  * [Comparing ABAC to RBAC](./introduction_attribute-based-access-control.html#introduction_attribute-based-access-control_compare-rbac)\n\n  * [IAM JSON policy elements: Condition operators](./reference_policies_elements_condition_operators.html)\n\n  * [Condition element](./reference_policies_elements_condition.html)\n\n  * [Overview of JSON policies](./access_policies.html#access_policies-json)"
  },
  "suggestion_recommended_condition_key_for_service_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-recommended-condition-key-for-service-principal",
    "name": "RecommendedConditionKeyForServicePrincipal",
    "short_description": "You can specify AWS services in the `Principal` element of a resource-based\npolicy using a _service principal_ , which is an identifier for the service.\nYou should use the `aws:SourceArn`, `aws:SourceAccount`, `aws:SourceOrgID`, or\n`aws:SourceOrgPaths` condition keys when granting access to service principals\ninstead of other condition keys, such as `aws:Referer`. This helps you prevent\na security issue called _the confused deputy problem_.",
    "description": "You can specify AWS services in the `Principal` element of a resource-based\npolicy using a _service principal_ , which is an identifier for the service.\nYou should use the `aws:SourceArn`, `aws:SourceAccount`, `aws:SourceOrgID`, or\n`aws:SourceOrgPaths` condition keys when granting access to service principals\ninstead of other condition keys, such as `aws:Referer`. This helps you prevent\na security issue called _the confused deputy problem_.\n\n**Related terms**\n\n  * [AWS service principals](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services)\n\n  * [AWS global condition keys: aws:SourceAccount](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceaccount)\n\n  * [AWS global condition keys: aws:SourceArn](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourcearn)\n\n  * [AWS global condition keys: aws:SourceOrgId](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceorgid)\n\n  * [AWS global condition keys: aws:SourceOrgPaths](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceorgpaths)\n\n  * [The confused deputy problem](https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html)"
  },
  "suggestion_irrelevant_condition_key_in_policy": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-irrelevant-condition-key-in-policy",
    "name": "IrrelevantConditionKeyInPolicy",
    "short_description": "Some condition keys aren't relevant for resource-based policies. For example,\nthe `s3:ResourceAccount` condition key isn't relevant for the resource-based\npolicy attached to an Amazon S3 bucket or Amazon S3 access point resource\ntype.",
    "description": "Some condition keys aren't relevant for resource-based policies. For example,\nthe `s3:ResourceAccount` condition key isn't relevant for the resource-based\npolicy attached to an Amazon S3 bucket or Amazon S3 access point resource\ntype.\n\nYou should use the condition key in an identity-based policy to control access\nto the resource.\n\n**Related terms**\n\n  * [Identity-based policies and resource-based policies](./access_policies_identity-vs-resource.html)"
  },
  "suggestion_redundant_principal_in_role_trust_policy": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-principal-in-role-trust-policy",
    "name": "RedundantPrincipalInRoleTrustPolicy",
    "short_description": "If you specify both an assumed-role principal and its parent role in the\n`Principal` element of a policy, it does not allow or deny any different\npermissions. For example, it is redundant if you specify the `Principal`\nelement using the following format:",
    "description": "If you specify both an assumed-role principal and its parent role in the\n`Principal` element of a policy, it does not allow or deny any different\npermissions. For example, it is redundant if you specify the `Principal`\nelement using the following format:\n\n    \n    \n    \"Principal\": {\n                \"AWS\": [\n                \"arn:aws:iam::AWS-account-ID:role/rolename\",\n                \"arn:aws:iam::AWS-account-ID:assumed-role/rolename/rolesessionname\"\n            ]\n\nWe recommend removing the assumed-role principal.\n\n**Related terms**\n\n  * [Role session principals](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-role-session)"
  },
  "suggestion_confirm_audience_claim_type": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-confirm-audience-claim-type",
    "name": "ConfirmAudienceClaimType",
    "short_description": "The `aud` (audience) claim key is a unique identifier for your app that is\nissued to you when you register your app with the IdP and identifies the\nrecipients that the JSON web token is intended for. Audience claims can be\nmultivalued or single-valued. If the claim is multivalued, use a\n`ForAllValues` or `ForAnyValue` condition set operator. If the claim is\nsingle-valued, do not use a condition set operator.",
    "description": "The `aud` (audience) claim key is a unique identifier for your app that is\nissued to you when you register your app with the IdP and identifies the\nrecipients that the JSON web token is intended for. Audience claims can be\nmultivalued or single-valued. If the claim is multivalued, use a\n`ForAllValues` or `ForAnyValue` condition set operator. If the claim is\nsingle-valued, do not use a condition set operator.\n\n**Related terms**\n\n  * [Creating a role for web identity or OpenID Connect Federation (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_oidc.html)\n\n  * [Multivalued context keys](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-single-vs-multi-valued-context-keys.html#reference_policies_condition-multi-valued-context-keys)\n\n  * [Single-valued vs. multivalued condition keys](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_single-vs-multi-valued-condition-keys.html)"
  }
}
